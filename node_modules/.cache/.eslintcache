[{"/Users/jeong-ideun/Desktop/xircle-client2/src/index.tsx":"1","/Users/jeong-ideun/Desktop/xircle-client2/src/App.tsx":"2","/Users/jeong-ideun/Desktop/xircle-client2/src/Styles.tsx":"3","/Users/jeong-ideun/Desktop/xircle-client2/src/Routes.ts":"4","/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Avartar.tsx":"5","/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Header/Header.tsx":"6","/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Header/HeaderPic.tsx":"7","/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Header/HeaderTextHeading.tsx":"8","/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Header/HeaderTextDescription.tsx":"9","/Users/jeong-ideun/Desktop/xircle-client2/src/dummyResources/dummyData.tsx":"10","/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/BottomNavBar.tsx":"11","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/friends/FriendsPage.tsx":"12","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/mypage/MyPage.tsx":"13","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/place/PlacePage.tsx":"14","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/place/BookingPage.tsx":"15","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/place/BookingConfirmPage.tsx":"16","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/RequestPage.tsx":"17","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/mypage/MyXirclePage.tsx":"18","/Users/jeong-ideun/Desktop/xircle-client2/src/components/mypage/RegisteredFeed.tsx":"19","/Users/jeong-ideun/Desktop/xircle-client2/src/components/mypage/registeredFeed.tsx":"20","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/mypage/ModifyProfilePage.tsx":"21","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/auth/AuthPage1.tsx":"22","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/auth/AuthPage2.tsx":"23","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/auth/AuthPage3.tsx":"24","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/auth/AuthPage4.tsx":"25","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/places/PlacesPage.tsx":"26","/Users/jeong-ideun/Desktop/xircle-client2/src/components/places/Place.tsx":"27","/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/BackButtonWithNoBackground.tsx":"28","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/auth/AuthPage.tsx":"29"},{"size":168,"mtime":1630994100668,"results":"30","hashOfConfig":"31"},{"size":1911,"mtime":1631699858667,"results":"32","hashOfConfig":"31"},{"size":5858,"mtime":1631761049232,"results":"33","hashOfConfig":"31"},{"size":306,"mtime":1631689464431,"results":"34","hashOfConfig":"31"},{"size":352,"mtime":1631071240897,"results":"35","hashOfConfig":"31"},{"size":518,"mtime":1631439419669,"results":"36","hashOfConfig":"31"},{"size":269,"mtime":1631439751851,"results":"37","hashOfConfig":"31"},{"size":385,"mtime":1631074624777,"results":"38","hashOfConfig":"31"},{"size":334,"mtime":1631075401473,"results":"39","hashOfConfig":"31"},{"size":3431,"mtime":1631339047374,"results":"40","hashOfConfig":"31"},{"size":1920,"mtime":1631380400166,"results":"41","hashOfConfig":"31"},{"size":4091,"mtime":1631766908232,"results":"42","hashOfConfig":"31"},{"size":3081,"mtime":1631765948083,"results":"43","hashOfConfig":"31"},{"size":6595,"mtime":1631444507872,"results":"44","hashOfConfig":"31"},{"size":4613,"mtime":1631440270075,"results":"45","hashOfConfig":"31"},{"size":1850,"mtime":1631445039240,"results":"46","hashOfConfig":"31"},{"size":1122,"mtime":1631438111629,"results":"47","hashOfConfig":"31"},{"size":1598,"mtime":1631685659176,"results":"48","hashOfConfig":"31"},{"size":1732,"mtime":1631710975514,"results":"49","hashOfConfig":"31"},{"size":1705,"mtime":1631185309432,"results":"50","hashOfConfig":"31"},{"size":4051,"mtime":1631382732614,"results":"51","hashOfConfig":"31"},{"size":2328,"mtime":1631705756382,"results":"52","hashOfConfig":"31"},{"size":10222,"mtime":1631764231215,"results":"53","hashOfConfig":"31"},{"size":3186,"mtime":1631710490425,"results":"54","hashOfConfig":"31"},{"size":5877,"mtime":1631710389253,"results":"55","hashOfConfig":"31"},{"size":3670,"mtime":1631710697371,"results":"56","hashOfConfig":"31"},{"size":3915,"mtime":1631685549225,"results":"57","hashOfConfig":"31"},{"size":575,"mtime":1631689011093,"results":"58","hashOfConfig":"31"},{"size":4428,"mtime":1631710534208,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"9mvhso",{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"62"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"62"},"/Users/jeong-ideun/Desktop/xircle-client2/src/index.tsx",[],["131","132"],"/Users/jeong-ideun/Desktop/xircle-client2/src/App.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/Styles.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/Routes.ts",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Avartar.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Header/Header.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Header/HeaderPic.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Header/HeaderTextHeading.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Header/HeaderTextDescription.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/dummyResources/dummyData.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/BottomNavBar.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/pages/friends/FriendsPage.tsx",["133","134","135","136"],"/Users/jeong-ideun/Desktop/xircle-client2/src/pages/mypage/MyPage.tsx",["137"],"/Users/jeong-ideun/Desktop/xircle-client2/src/pages/place/PlacePage.tsx",["138","139","140","141"],"import styled from \"styled-components\";\nimport PostMainPicDummy from \"../../dummyResources/PostMainPicDummy.png\";\nimport PostSubPicDummy from \"../../dummyResources/PostSubPicDummy.png\";\nimport Avartar1 from \"../../dummyResources/Avartar1.png\";\nimport {\n  colors,\n  Container,\n  MainBtn,\n  SpaceForNavBar,\n  BottomFixedButtonContainer,\n  BottomFixedButtoninContainer,\n} from \"../../Styles\";\nimport Header from \"../../components/shared/Header/Header\";\nimport HeaderTextHeading from \"../../components/shared/Header/HeaderTextHeading\";\nimport HeaderTextDescription from \"../../components/shared/Header/HeaderTextDescription\";\nimport Avartar from \"../../components/shared/Avartar\";\nimport routes from \"../../Routes\";\nimport { Link } from \"react-router-dom\";\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface Props {\n  // deadline: string;\n  // imgUrl: string;\n  // name: string;\n  // date: string;\n  // ageRange: {min?: number, max?: number};\n  // tags: string[];\n  // participants: string[];\n  // participants_count: number;\n  // isClosed: boolean;\n  // isParticipating: boolean;\n}\n\nexport default function PlacePage(props: Props) {\n  return (\n    <>\n      <Container>\n        <SHeader>\n          <SHeaderPic src={PostMainPicDummy} />\n\n          <TempToBeDeleted></TempToBeDeleted>\n          <HeaderText>\n            <SHeaderTextHeading>안암 막걸리 찬가</SHeaderTextHeading>\n            <HeaderSplit></HeaderSplit>\n            <SHeaderTextDescription>\n              내일 / 서울 용상구 보광로 60길 14-38 <br />\n              20세~26세\n            </SHeaderTextDescription>\n          </HeaderText>\n        </SHeader>\n\n        <ContainerDescription>\n          <p>\n            새내기 미팅은 여기서!! 코로나 학번 모여라~~~\n            <br />\n            준비물은 청춘과 체력! 같이 이런저런 이야기 하면서 놀아요\n            <br />\n            나이 상관 없이 즐기는 광란의 안암 프리즘!\n            <br />\n            좋은 추억 쌓아보아요!\n            <br />\n          </p>\n          <DetailDescription>\n            <p>가계 정보 더보기</p>\n          </DetailDescription>\n        </ContainerDescription>\n        <GridContainer>\n          <GridRow>\n            <GridPic src={PostSubPicDummy} />\n            <GridPic src={PostSubPicDummy} />\n            <GridPic src={PostSubPicDummy} />\n          </GridRow>\n          <GridRow>\n            <GridPic src={PostSubPicDummy} />\n            <GridPic src={PostSubPicDummy} />\n            <GridPic src={PostSubPicDummy} />\n          </GridRow>\n        </GridContainer>\n        <ParticipantContainer style={{ marginTop: \"31px\" }}>\n          <HeadingParticipant>\n            7명 참여중 / 이런 친구들이 참여했어요!\n          </HeadingParticipant>\n          <PParticipant>남 5 여 2 평균 나이 20초반</PParticipant>\n          <AvartarImgContainerParticipant>\n            <Avartar src={Avartar1} marginRight={\"5px\"} />\n            <Avartar src={Avartar1} marginRight={\"5px\"} />\n            <Avartar src={Avartar1} marginRight={\"5px\"} />\n            <Avartar src={Avartar1} marginRight={\"5px\"} />\n            <Avartar src={Avartar1} marginRight={\"5px\"} />\n            <Avartar src={Avartar1} marginRight={\"5px\"} />\n            <Avartar src={Avartar1} marginRight={\"5px\"} />\n            <Avartar src={Avartar1} marginRight={\"5px\"} />\n          </AvartarImgContainerParticipant>\n          <PParticipant>참가 전 학교 인증은 필수입니다.</PParticipant>\n        </ParticipantContainer>\n        <ParticipantContainer style={{ marginTop: \"25px\" }}>\n          <HeadingParticipant>찾아오는 길</HeadingParticipant>\n          <DirText>\n            <FontAwesomeIcon\n              icon={faMapMarkerAlt}\n              color={colors.LightGray}\n              size=\"lg\"\n              style={{ marginRight: \"4px\" }}\n            />\n            서울 강남구 강남대로 152길 42 2층\n          </DirText>\n        </ParticipantContainer>\n        <Link\n          to={routes.booking}\n          style={{ textDecoration: \"none\", color: colors.Black }}\n        >\n          <BottomFixedButtonContainer>\n            <BottomFixedButtoninContainer>\n              <p>참여하기</p>\n            </BottomFixedButtoninContainer>\n          </BottomFixedButtonContainer>\n        </Link>\n        <SpaceForNavBar />\n      </Container>\n    </>\n  );\n}\n\nconst ContainerDescription = styled.div`\n  margin-top: 27px;\n  width: 345px;\n  margin-left: auto;\n  margin-right: auto;\n  font-size: 12px;\n  line-height: 150%;\n  color: #6f7789;\n  position: relative;\n`;\n\nconst DetailDescription = styled.div`\n  position: absolute;\n  bottom: -15px;\n  right: 0;\n`;\n\nconst GridContainer = styled.div`\n  width: 345px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 36px;\n`;\n\nconst GridRow = styled.div`\n  margin-top: 6px;\n  width: 100%;\n  justify-content: space-between;\n  display: flex;\n`;\n\nconst GridPic = styled.img`\n  width: 112px;\n  height: 112px;\n  object-fit: cover;\n`;\n\nconst ParticipantContainer = styled.div`\n  width: 345px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 22px;\n  line-height: 10px;\n`;\n\nconst HeadingParticipant = styled.p`\n  color: #18a0fb;\n  font-weight: 700;\n  font-size: 15px;\n`;\n\nconst PParticipant = styled.p`\n  margin-top: 22px;\n  color: #8c94a4;\n  font-size: 11px;\n  line-height: 14px;\n  font-weight: 400;\n`;\n\nconst AvartarImgContainerParticipant = styled.div`\n  margin-top: 11px;\n`;\n\nconst DirText = styled.p`\n  color: ${colors.LightGray};\n  margin-top: 22px;\n  margin-left: auto;\n  margin-right: auto;\n  line-height: 150%;\n  font-size: 11px;\n`;\n\nconst TempToBeDeleted = styled.div`\n  position: absolute;\n  width: 375px;\n  height: 250px;\n\n  background: linear-gradient(\n    180deg,\n    rgba(8, 8, 8, 0) 0%,\n    rgba(8, 8, 8, 0.1) 23.94%,\n    rgba(8, 8, 8, 0.24) 34.55%,\n    #191b1a 100%\n  );\n  border-radius: 0px;\n\n  position: absolute;\n  top: 0;\n`;\n\nconst SHeaderTextHeading = styled.h3`\n  padding-bottom: 13px;\n  font-size: 20px;\n  font-weight: 800;\n`;\n\nconst SHeaderTextDescription = styled.p`\n  margin-top: 13px;\n  font-size: 10px;\n  font-weight: 500;\n  line-height: 150%;\n`;\n\nconst HeaderSplit = styled.div`\n  width: 180px;\n  border-bottom: 1px solid white;\n`;\n\nconst SHeader = styled.div`\n  width: 100%;\n  position: relative;\n`;\n\nconst SHeaderPic = styled.img`\n  width: 100%;\n  height: 250px;\n  object-fit: cover;\n`;\n\nconst HeaderText = styled.div`\n  color: white;\n  position: absolute;\n  bottom: 25px;\n  left: 20px;\n  width: 65%;\n`;\n","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/place/BookingPage.tsx",["142"],"import styled from \"styled-components\";\nimport BottomNavBar from \"../../components/shared/BottomNavBar\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport {\n  Container,\n  MainBtn,\n  ProcedureHeading,\n  SelectionBox,\n  SelectionMainText,\n  SelectionSubText,\n  colors,\n  Tag,\n  Heading,\n  ContainerwithLeftRightMargin,\n} from \"../../Styles\";\nimport routes from \"../../Routes\";\n\ninterface Props {}\n\nexport default function BookingPage(props: Props) {\n  const [isSelected1, setIsSelected1] = useState<boolean>(false);\n  const [isSelected2, setIsSelected2] = useState<boolean>(false);\n  return (\n    <Container>\n      <ContainerwithLeftRightMargin>\n        <Heading>막걸리 찬가</Heading>\n        <SelectionBoxBooking onClick={() => setIsSelected1(!isSelected1)}>\n          <SelectionMainTextBooking>\n            다음주 수요일 오후 4시\n            <TagBooking>\n              <p>4인 모임</p>\n            </TagBooking>\n          </SelectionMainTextBooking>\n          <SelectionSubTextBooking>5명 참가중</SelectionSubTextBooking>\n          <CheckIcon>\n            {isSelected1 ? (\n              <FontAwesomeIcon icon={faCheckCircle} color={colors.MidBlue} />\n            ) : (\n              <FontAwesomeIcon icon={faCircle} color={colors.LightGray} />\n            )}\n          </CheckIcon>\n        </SelectionBoxBooking>\n        <SelectionBoxBooking onClick={() => setIsSelected2(!isSelected2)}>\n          <SelectionMainTextBooking>\n            다음주 수요일 오후 4시\n            <TagBooking>\n              <p>2인 모임</p>\n            </TagBooking>\n          </SelectionMainTextBooking>\n          <SelectionSubTextBooking>7명 참가중</SelectionSubTextBooking>\n          <CheckIcon>\n            {isSelected2 ? (\n              <FontAwesomeIcon icon={faCheckCircle} color={colors.MidBlue} />\n            ) : (\n              <FontAwesomeIcon icon={faCircle} color={colors.LightGray} />\n            )}\n          </CheckIcon>\n        </SelectionBoxBooking>\n        <Instruction>\n          <InstructionHeading>식탁 모임은 이렇게 진행돼요!</InstructionHeading>\n          <InstructionDetail>\n            1. 같은 시간을 신청한 친구들과 4인/2인 랜덤 그룹을 만들어 드려요\n            <br />\n            2. 모임 당일 단톡을 만들어드려요! 친해지는 시간을 가져보세요\n            <br />\n            3. 지정된 장소와 시간에 만나서 놀아요.\n            <br />\n          </InstructionDetail>\n          <InstructionDetail style={{ marginTop: \"9px\" }}>\n            단톡이 만들어지기전에 적어주신 전화번호로 연락을 드릴게요!\n          </InstructionDetail>\n        </Instruction>\n        {isSelected1 || isSelected2 ? (\n          <Link to={routes.bookingconfirm} style={{ textDecoration: \"none\" }}>\n            <EnabledMainBtnBooking>놀러가기</EnabledMainBtnBooking>\n          </Link>\n        ) : (\n          <DisabledMainBtnBooking>놀러가기</DisabledMainBtnBooking>\n        )}\n      </ContainerwithLeftRightMargin>\n\n      <BottomNavBar selectedItem=\"places\" />\n    </Container>\n  );\n}\n\nconst SelectionBoxBooking = styled(SelectionBox)`\n  margin-top: 30px;\n  position: relative;\n  font-size: 24px;\n`;\n\nconst EnabledMainBtnBooking = styled(MainBtn)`\n  margin-top: 30px;\n  width: 100%;\n`;\n\nconst DisabledMainBtnBooking = styled(MainBtn)`\n  margin-top: 30px;\n  width: 100%;\n  background-color: ${colors.LightGray};\n`;\n\nconst SelectionMainTextBooking = styled(SelectionMainText)`\n  margin-left: 32px;\n  position: relative;\n`;\n\nconst SelectionSubTextBooking = styled(SelectionSubText)`\n  margin-left: 32px;\n`;\n\nconst Instruction = styled.div`\n  width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 30px;\n  min-height: 200px;\n  background-color: #f8fafd;\n  border-radius: 5px;\n  display: content;\n  justify-content: center;\n  align-items: center;\n  color: ${colors.MidGray};\n`;\n\nconst InstructionHeading = styled.p`\n  font-weight: bold;\n  font-size: 13px;\n  line-height: 16px;\n  margin-left: 12px;\n  padding-top: 20px;\n`;\n\nconst InstructionDetail = styled.p`\n  margin-top: 10px;\n  font-weight: 400;\n  font-size: 11px;\n  line-height: 18px;\n  letter-spacing: -0.005em;\n  margin-left: 12px;\n`;\n\nconst TagBooking = styled(Tag)`\n  top: -11px;\n  left: 150px;\n  transform: translate(0, 50%);\n`;\n\nconst CheckIcon = styled.div`\n  position: absolute;\n  right: 10%;\n`;\n","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/place/BookingConfirmPage.tsx",["143"],"import styled from \"styled-components\";\nimport BottomNavBar from \"../../components/shared/BottomNavBar\";\nimport {\n  Container,\n  ProcedureHeading,\n  SubText,\n  colors,\n  MainBtn,\n  Heading,\n  ContainerwithLeftRightMargin,\n} from \"../../Styles\";\n\ninterface Props {}\n\nexport default function BookingConfirmPage(props: Props) {\n  return (\n    <Container>\n      <ContainerwithLeftRightMargin>\n        <Heading>참여 신청 완료</Heading>\n        <SubTextBookingBookingConfirm>\n          단톡이 만들어지면 적어주신 전화번호로 연락을 드릴게요!\n          <br />\n          <br />\n          모임 시작 전 참여가 어려워진 경우, 반드시 미리\n          <b> 마이페이지 {\">\"} 문의하기</b>를 통해서 알려주세요.\n          <br />\n          <br />\n          모임에 참여하는 친구들을 존중하고 따뜻한 문화를 함께 만들어나가요.\n          <br />\n          <br />\n          무단으로 불참하거나 함께하는 친구들에게 피해를 주는 경우, 이용에\n          제재를 받을 수 있습니다.\n        </SubTextBookingBookingConfirm>\n        <MainBtnBookingConfirm>\n          참여하는 친구들 프로필 보기\n        </MainBtnBookingConfirm>\n        <HomeBtn>홈으로 가기</HomeBtn>\n      </ContainerwithLeftRightMargin>\n      <BottomNavBar selectedItem=\"places\" />\n    </Container>\n  );\n}\n\nconst SubTextBookingBookingConfirm = styled(SubText)`\n  margin-top: 40px;\n  width: 315px;\n  line-height: 1.2em;\n  font-weight: 500;\n  font-size: 11px;\n  b {\n    font-weight: 900;\n  }\n`;\n\nconst MainBtnBookingConfirm = styled(MainBtn)`\n  margin-top: 100px;\n  width: 300px;\n`;\n\nconst HomeBtn = styled.div`\n  margin-top: 20px;\n  color: ${colors.LightGray};\n  font-size: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n`;\n","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/RequestPage.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/pages/mypage/MyXirclePage.tsx",["144"],"import styled from \"styled-components\";\nimport {\n  ContainerFlexColumn,\n  ContainerwithLeftRightMargin,\n  Heading,\n  colors,\n} from \"../../Styles\";\nimport BottomNavBar from \"../../components/shared/BottomNavBar\";\nimport { feedDummyData } from \"../../dummyResources/dummyData\";\nimport { Link } from \"react-router-dom\";\nimport routes from \"../../Routes\";\nimport RegisteredFeed from \"../../components/mypage/RegisteredFeed\";\nimport { Fragment } from \"react\";\n\ninterface Props {}\n\nexport default function MyXirclePage(props: Props) {\n  return (\n    <ContainerFlexColumn>\n      <ContainerwithLeftRightMargin>\n        <Heading>내가 신청한 써클</Heading>\n        {feedDummyData.map((item, idx) => {\n          return (\n            <Fragment key={idx}>\n              <Link\n                to={routes.place}\n                style={{ textDecoration: \"none\", color: colors.Black }}\n              >\n                <RegisteredFeed\n                  placeImgSrc={item.placeImgSrc}\n                  feedParticipant={item.feedParticipant}\n                  feedClosed={item.feedClosed}\n                  feedHeading={item.feedHeading}\n                  feedDetail={item.feedDetail}\n                  feedLocation={item.feedLocation}\n                  feedTime={item.feedTime}\n                  feedCondition={item.feedCondition}\n                  feedTag={item.feedTag}\n                ></RegisteredFeed>\n              </Link>\n            </Fragment>\n          );\n        })}\n      </ContainerwithLeftRightMargin>\n      <BottomNavBar selectedItem=\"mypage\"></BottomNavBar>\n    </ContainerFlexColumn>\n  );\n}\n","/Users/jeong-ideun/Desktop/xircle-client2/src/components/mypage/RegisteredFeed.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/components/mypage/registeredFeed.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/pages/mypage/ModifyProfilePage.tsx",["145"],"import styled from \"styled-components\";\nimport {\n  ContainerFlexColumn,\n  ContainerwithLeftRightMargin,\n  Heading,\n  BottomFixedButtonContainer,\n  BottomFixedButtoninContainer,\n  FlexDiv,\n  Avartar,\n  colors,\n  SpaceForNavBar,\n  SubText,\n  MidInput,\n  SmallInput,\n  GenderText,\n  BigTextArea,\n  Label,\n} from \"../../Styles\";\nimport { DummyAvartar, DummyProfileData } from \"../../dummyResources/dummyData\";\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface Props {}\n\nexport default function ModifyProfilePage(props: Props) {\n  return (\n    <ContainerFlexColumn>\n      <ContainerwithLeftRightMargin>\n        <Heading>프로필 수정하기</Heading>\n        <FlexDiv>\n          <AvartarProfile src={DummyAvartar} />\n        </FlexDiv>\n        <FlexDiv\n          style={{\n            marginTop: \"11px\",\n            fontSize: \"13px\",\n            fontWeight: 700,\n            color: colors.MidBlue,\n          }}\n        >\n          <p>프로필사진 수정하러가기</p>\n        </FlexDiv>\n        <WarningText>\n          학교와 나이, 관심사 변경은 불가능해요. 수정을 원하실 경우{\" \"}\n          <b>마이페이지 {\">\"} 문의하기</b>에서 상담원에게 문의해주세요!\n        </WarningText>\n        <LocationText>\n          <FontAwesomeIcon\n            icon={faMapMarkerAlt}\n            color={colors.LightGray}\n            size=\"lg\"\n            style={{ marginRight: \"8px\" }}\n          />\n          {DummyProfileData.location ? DummyProfileData.location : \"대한민국\"}\n        </LocationText>\n        <form>\n          <MidInput\n            name=\"name\"\n            placeholder=\"Username\"\n            value={DummyProfileData.userName}\n          />\n          <FlexDiv\n            style={{\n              justifyContent: \"normal\",\n              marginTop: \"12px\",\n            }}\n          >\n            <SmallInput\n              name=\"school\"\n              placeholder=\"고려대학교\"\n              disabled\n              style={{ marginTop: \"0px\" }}\n              value={DummyProfileData.university}\n            />\n          </FlexDiv>\n          <SmallInput name=\"age\" placeholder=\"20대 초반\" disabled />\n          <FlexDiv style={{ justifyContent: \"normal\", marginTop: \"20px\" }}>\n            <input type=\"radio\" name=\"gender\" id=\"male\" disabled checked />\n            <GenderText>남성</GenderText>\n            <input\n              type=\"radio\"\n              name=\"gender\"\n              id=\"female\"\n              disabled\n              style={{ marginLeft: \"32px\" }}\n            />\n            <GenderText>여성</GenderText>\n          </FlexDiv>\n\n          <Label>간단한 자기소개</Label>\n          <BigTextArea\n            name=\"selfpromotext\"\n            placeholder=\"ex. 미대에 다니는 다양한 삶을 살고 싶어하는 미개봉화석^^\n           요즘 스타트업에 관심이 생겨서 관련하신 분들과 이야기하면 좋을 것 같아요ㅎㅎ\"\n          />\n          <Label>계열이나 직업을 적어주세요</Label>\n          <MidInput\n            name=\"job\"\n            placeholder=\"ex. 공대생 / 미개봉 새내기 / 디자이너\"\n            disabled\n          />\n          <Label>관심사</Label>\n          <MidInput\n            name=\"interest\"\n            placeholder=\"#스타트업#술#한강에서 치맥\"\n            disabled\n          />\n          <SpaceForNavBar />\n        </form>\n      </ContainerwithLeftRightMargin>\n      <BottomFixedButtonContainer>\n        <BottomFixedButtoninContainer>수정하기</BottomFixedButtoninContainer>\n      </BottomFixedButtonContainer>\n    </ContainerFlexColumn>\n  );\n}\n\nconst WarningText = styled.p`\n  margin-top: 18px;\n  font-weight: normal;\n  font-size: 10px;\n  color: ${colors.MidGray};\n  b {\n    font-weight: 900;\n  }\n`;\n\nconst LocationText = styled.p`\n  font-size: 14px;\n  margin-top: 12px;\n  color: ${colors.LightGray};\n`;\n\nconst AvartarProfile = styled(Avartar)`\n  width: 125px;\n  height: 125px;\n  margin-top: 45px;\n`;\n","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/auth/AuthPage1.tsx",["146","147","148","149"],"import styled from \"styled-components\";\nimport React, { useState } from \"react\";\nimport {\n  ContainerFlexColumn,\n  ContainerwithLeftRightMargin,\n  Heading,\n  SubText,\n  colors,\n  MainBtn,\n  NextButtonDisabled,\n  NextButtonEnabled,\n} from \"../../Styles\";\nimport { AuthState, AuthAction } from \"./types\";\nimport routes from \"../../Routes\";\n\ninterface Props {\n  onNext: () => void;\n  state: AuthState;\n  dispatch: React.Dispatch<AuthAction>;\n}\n\n\n\nexport default function AuthPage1({\n  onNext,\n  state,\n  dispatch,\n  ...props\n}: Props) {\n\n\n  const Validate = (data: string) => {\n    if (data.length < 10 || data.length > 11) {\n      dispatch({ type: \"setStage1Valid\", payload: false });\n      return;\n    } else if (data[0] !== \"0\" || data[1] !== \"1\" || data[2] !== \"0\") {\n      dispatch({ type: \"setStage1Valid\", payload: false });\n      return;\n    } else {\n      for (var i = 3; i < data.length; i++) {\n        if (data[i] < \"0\" || data[i] > \"9\") {\n          dispatch({ type: \"setStage1Valid\", payload: false });\n          return;\n        }\n      }\n      dispatch({ type: \"setStage1Valid\", payload: true });\n    }\n  };\n\n  return (\n    <ContainerwithLeftRightMargin>\n      <Heading style={{ lineHeight: \"35px\" }}>\n        친구들과\n        <br /> 맛있는 밥 먹으러 갈까요?\n      </Heading>\n      <SubText style={{ lineHeight: \"20px\", marginTop: \"12px\" }}>\n        단톡방을 만들어드리는 용도로 사용되기에 꼭! 사용하시는 전화번호를\n        적어주셔야 해요.\n      </SubText>\n      <form>\n        <PhoneNumberInput\n          placeholder=\"전화번호를 입력해주세요\"\n          type=\"number\"\n          name=\"phone\"\n          value={state.phoneNumber}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            dispatch({ type: \"setPhoneNumber\", payload: e.target.value });\n            Validate(e.target.value);\n          }}\n        />\n      </form>\n      {state.stage1Valid ? (\n        <NextButtonEnabled onClick={onNext}>다음</NextButtonEnabled>\n      ) : (\n        <NextButtonDisabled>다음</NextButtonDisabled>\n      )}\n    </ContainerwithLeftRightMargin>\n  );\n}\n\nconst PhoneNumberInput = styled.input`\n  margin-top: 40px;\n  padding: 0px;\n  width: 100%;\n  height: 56px;\n  border-radius: 0;\n  border: 0px;\n  border-bottom: 1px solid ${colors.BareGray};\n`;\n","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/auth/AuthPage2.tsx",["150","151","152"],"import styled from \"styled-components\";\nimport {\n  ContainerFlexColumn,\n  ContainerwithLeftRightMargin,\n  Heading,\n  SubText,\n  colors,\n  MainBtn,\n  MidInput,\n  FlexDiv,\n  GenderText,\n  Label,\n  BigTextArea,\n  NextButtonDisabled,\n  SpaceForNavBar,\n  NextButtonEnabled,\n} from \"../../Styles\";\nimport {\n  faCheckCircle,\n  faMapMarkerAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport { useState } from \"react\";\nimport { AuthState, AuthAction } from \"./types\";\n\ninterface Props {\n  onNext: () => void;\n  state: AuthState;\n  dispatch: React.Dispatch<AuthAction>;\n}\n\nexport default function AuthPage2({\n  onNext,\n  state,\n  dispatch,\n  ...props\n}: Props) {\n  const univs: string[] = [\n    \"고려대학교 재학\",\n    \"고려대학교 졸업\",\n    \"연세대학교 재학\",\n    \"연세대학교 졸업\",\n  ];\n  const [nameError, SetNameError] = useState<boolean>(false);\n  const [univError, SetUnivError] = useState<boolean>(false);\n  const [ageError, SetAgeError] = useState<boolean>(false);\n  const [genderError, SetGenderError] = useState<boolean>(false);\n  const [titleError, SetTitleError] = useState<boolean>(false);\n  const [bioError, SetBioError] = useState<boolean>(false);\n\n  const SetErrorAll = (param: boolean) => {\n    SetNameError(param);\n    SetUnivError(param);\n    SetAgeError(param);\n    SetGenderError(param);\n    SetTitleError(param);\n    SetBioError(param);\n  };\n  const errorMessages: string[] = [\n    \"20자 이하의 이름을 입력해주세요\",\n    \"학교를 선택해주세요\",\n    \"19 ~ 40 사이의 나이를 입력해주세요\",\n    \"성별을 선택해주세요\",\n    \"1자에서 8자 이내로 입력해주세요\",\n    \"1자 이상의 자기소개를 입력해주세요\",\n  ];\n\n  const CheckAge = (age: number) => {\n    if (age >= 19 && age <= 40) {\n      return true;\n    }\n    return false;\n  };\n  function Validate(\n    univ: string = state.university,\n    gender: string = state.gender\n  ): void {\n    if (state.name.length <= 0 || state.name.length > 20) {\n      SetErrorAll(false);\n      dispatch({ type: \"setStage2Valid\", payload: false });\n      SetNameError(true);\n    } else if (!univs.includes(univ)) {\n      SetErrorAll(false);\n      dispatch({ type: \"setStage2Valid\", payload: false });\n      SetUnivError(true);\n    } else if (!CheckAge(Number(state.age))) {\n      SetErrorAll(false);\n      dispatch({ type: \"setStage2Valid\", payload: false });\n      SetAgeError(true);\n    } else if (gender !== \"male\" && gender !== \"female\") {\n      SetErrorAll(false);\n      dispatch({ type: \"setStage2Valid\", payload: false });\n      SetGenderError(true);\n    } else if (state.title.length === 0 || state.title.length > 8) {\n      SetErrorAll(false);\n      dispatch({ type: \"setStage2Valid\", payload: false });\n      SetTitleError(true);\n    } else if (state.bio.length < 1) {\n      SetErrorAll(false);\n      dispatch({ type: \"setStage2Valid\", payload: false });\n      SetBioError(true);\n    } else {\n      SetErrorAll(false);\n      dispatch({ type: \"setStage2Valid\", payload: true });\n    }\n  }\n\n  return (\n    <ContainerwithLeftRightMargin>\n      <Heading>프로필 만들기</Heading>\n\n      <form>\n        <MidInput\n          name=\"name\"\n          placeholder=\"Username\"\n          style={\n            nameError\n              ? { marginTop: \"24px\", borderColor: colors.Red }\n              : { marginTop: \"24px\", borderColor: colors.BareGray }\n          }\n          type=\"text\"\n          value={state.name}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            dispatch({ type: \"setName\", payload: e.target.value })\n          }\n          onKeyUp={() => Validate()}\n        />\n        {nameError && <ErrorMessage>{errorMessages[0]}</ErrorMessage>}\n        <select\n          id=\"\"\n          name=\"University\"\n          value={state.university}\n          style={\n            univError\n              ? { marginTop: \"12px\", borderColor: colors.Red }\n              : { marginTop: \"12px\" }\n          }\n          onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n            dispatch({ type: \"setUniversity\", payload: e.target.value });\n            Validate(e.target.value);\n          }}\n        >\n          <option value=\"\" style={{ color: colors.BareGray }}>\n            학교\n          </option>\n          <option value=\"고려대학교 재학\" style={{ color: colors.Black }}>\n            고려대학교 재학\n          </option>\n          <option value=\"고려대학교 졸업\" style={{ color: colors.Black }}>\n            고려대학교 졸업\n          </option>\n          <option value=\"연세대학교 재학\" style={{ color: colors.Black }}>\n            연세대학교 재학\n          </option>\n          <option value=\"연세대학교 졸업\" style={{ color: colors.Black }}>\n            연세대학교 졸업\n          </option>\n        </select>\n        {univError && <ErrorMessage>{errorMessages[1]}</ErrorMessage>}\n        <MidInput\n          placeholder=\"나이\"\n          type=\"number\"\n          name=\"Age\"\n          style={\n            ageError\n              ? { marginTop: \"12px\", borderColor: colors.Red }\n              : { marginTop: \"12px\" }\n          }\n          value={state.age}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            dispatch({ type: \"setAge\", payload: e.target.value })\n          }\n          onKeyUp={() => Validate()}\n        ></MidInput>\n        {ageError && <ErrorMessage>{errorMessages[2]}</ErrorMessage>}\n        {/* <SubText>나이는 20초 20중 20후 30초 방식으로 표기가되요!</SubText> */}\n        <FlexDiv style={{ justifyContent: \"normal\", marginTop: \"20px\" }}>\n          <span\n            style={{\n              justifyContent: \"normal\",\n              display: \"flex\",\n              alignItems: \"center\",\n            }}\n            onClick={() => {\n              dispatch({ type: \"setGender\", payload: \"male\" });\n              Validate(state.university, \"male\");\n            }}\n          >\n            {state.gender === \"male\" ? (\n              <FontAwesomeIcon\n                icon={faCheckCircle}\n                color={colors.MidBlue}\n                size=\"lg\"\n              />\n            ) : (\n              <FontAwesomeIcon\n                icon={faCircle}\n                color={genderError ? colors.Red : colors.LightGray}\n                size=\"lg\"\n              />\n            )}\n            <GenderText\n              style={\n                genderError\n                  ? { marginLeft: \"5px\", color: colors.Red }\n                  : { marginLeft: \"5px\" }\n              }\n            >\n              남성\n            </GenderText>\n          </span>\n          <span\n            style={{\n              justifyContent: \"normal\",\n              display: \"flex\",\n              alignItems: \"center\",\n              marginLeft: \"10px\",\n            }}\n            onClick={() => {\n              dispatch({ type: \"setGender\", payload: \"female\" });\n              Validate(state.university, \"female\");\n            }}\n          >\n            {state.gender === \"female\" ? (\n              <FontAwesomeIcon\n                icon={faCheckCircle}\n                color={colors.MidBlue}\n                size=\"lg\"\n              />\n            ) : (\n              <FontAwesomeIcon\n                icon={faCircle}\n                color={genderError ? colors.Red : colors.LightGray}\n                size=\"lg\"\n              />\n            )}\n            <GenderText\n              style={\n                genderError\n                  ? { marginLeft: \"5px\", color: colors.Red }\n                  : { marginLeft: \"5px\" }\n              }\n            >\n              여성\n            </GenderText>\n          </span>\n        </FlexDiv>\n        {genderError && <ErrorMessage>{errorMessages[3]}</ErrorMessage>}\n        <Label>계열이나 직업을 적어주세요</Label>\n        <MidInput\n          name=\"title\"\n          placeholder=\"ex. 공대생 / 미개봉 새내기 / 디자이너\"\n          style={\n            titleError\n              ? { fontSize: \"12px\", borderColor: colors.Red }\n              : { fontSize: \"12px\" }\n          }\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            dispatch({ type: \"setTitle\", payload: e.target.value })\n          }\n          value={state.title}\n          onKeyUp={() => Validate()}\n        />\n        {titleError && <ErrorMessage>{errorMessages[4]}</ErrorMessage>}\n        <Label>간단한 자기소개</Label>\n        <BigTextArea\n          name=\"bio\"\n          value={state.bio}\n          placeholder=\"ex. 미대에 다니는 다양한 삶을 살고 싶어하는 미개봉화석^^\n           요즘 스타트업에 관심이 생겨서 관련하신 분들과 이야기하면 좋을 것 같아요ㅎㅎ\"\n          style={\n            bioError\n              ? {\n                  fontSize: \"12px\",\n                  lineHeight: \"18px\",\n                  borderColor: colors.Red,\n                }\n              : { fontSize: \"12px\", lineHeight: \"18px\" }\n          }\n          onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) =>\n            dispatch({ type: \"setBio\", payload: e.target.value })\n          }\n          onKeyUp={() => Validate()}\n        />\n        {bioError && <ErrorMessage>{errorMessages[5]}</ErrorMessage>}\n      </form>\n      <p\n        style={{\n          justifyContent: \"end\",\n          display: \"flex\",\n          alignItems: \"center\",\n          fontSize: \"12px\",\n          color: colors.MidGray,\n          marginTop: \"5px\",\n        }}\n      >\n        <FontAwesomeIcon\n          icon={faMapMarkerAlt}\n          color={colors.LightGray}\n          size=\"lg\"\n          style={{ marginRight: \"8px\" }}\n        />\n        {state.location ? state.location : \"대한민국 어딘가\"}\n      </p>\n      <SpaceForNavBar></SpaceForNavBar>\n\n      {state.stage2Valid ? (\n        <NextButtonEnabled onClick={onNext}>다음</NextButtonEnabled>\n      ) : (\n        <NextButtonDisabled>다음</NextButtonDisabled>\n      )}\n    </ContainerwithLeftRightMargin>\n  );\n}\n\nconst ErrorMessage = styled.p`\n  margin-top: 3px;\n  font-size: 8px;\n  margin-left: 5px;\n  color: ${colors.Red};\n`;\n","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/auth/AuthPage3.tsx",["153","154"],"import styled from \"styled-components\";\nimport {\n  ContainerwithLeftRightMargin,\n  Heading,\n  SubText,\n  colors,\n  MainBtn,\n  NextButtonDisabled,\n  Avartar,\n  FlexDiv,\n  NextButtonEnabled,\n} from \"../../Styles\";\nimport { DummyAvartar } from \"../../dummyResources/dummyData\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { useState } from \"react\";\nimport { AuthState, AuthAction } from \"./types\";\n\ninterface Props {\n  onNext: () => void;\n  state: AuthState;\n  dispatch: React.Dispatch<AuthAction>;\n}\n\nexport default function AuthPage3({\n  onNext,\n  state,\n  dispatch,\n  ...props\n}: Props) {\n  const [isSelected1, setIsSelected1] = useState<boolean>(false);\n\n  return (\n    <ContainerwithLeftRightMargin>\n      <Heading>마지막! 프로필 사진</Heading>\n      <SubText style={{ marginTop: \"12px\" }}>\n        개성이 나타나는 사진을 업로드해주세요!\n      </SubText>\n      <FlexDiv\n        style={{ marginTop: \"29px\" }}\n        onClick={() => setIsSelected1(true)}\n      >\n        <Avartar src={DummyAvartar} style={{ width: \"78px\", height: \"78px\" }} />\n      </FlexDiv>\n      <FlexDiv\n        style={{\n          marginTop: \"11px\",\n          fontSize: \"13px\",\n          fontWeight: 700,\n          color: colors.MidBlue,\n        }}\n      >\n        <p>프로필사진 수정하러가기</p>\n      </FlexDiv>\n      <SubText\n        style={{ fontSize: \"13px\", fontWeight: \"bold\", marginTop: \"36px\" }}\n      >\n        #프로필 사진 예시\n      </SubText>\n      <SubText\n        style={{\n          fontSize: \"10px\",\n          fontWeight: 500,\n          marginTop: \"2px\",\n          lineHeight: \"17px\",\n        }}\n      >\n        관심사를 즐기는 사진 / 좋아하는 공간에서 찍은 사진 / 개성이 담긴 사진\n      </SubText>\n      <FlexDiv style={{ justifyContent: \"space-around\", marginTop: \"16px\" }}>\n        <div>\n          <Avartar\n            src={DummyAvartar}\n            style={{ width: \"50px\", height: \"50px\" }}\n          />\n        </div>\n        <div>\n          <Avartar\n            src={DummyAvartar}\n            style={{ width: \"50px\", height: \"50px\" }}\n          />\n        </div>\n        <div>\n          <Avartar\n            src={DummyAvartar}\n            style={{ width: \"50px\", height: \"50px\" }}\n          />\n        </div>\n        <div>\n          <Avartar\n            src={DummyAvartar}\n            style={{ width: \"50px\", height: \"50px\" }}\n          />\n        </div>\n      </FlexDiv>\n      <FlexDiv\n        style={{\n          justifyContent: \"space-around\",\n          transform: \"translateY(-10px)\",\n        }}\n      >\n        <FontAwesomeIcon icon={faCheckCircle} color={colors.MidBlue} />\n        <FontAwesomeIcon icon={faCheckCircle} color={colors.MidBlue} />\n        <FontAwesomeIcon icon={faCheckCircle} color={colors.MidBlue} />\n        <FontAwesomeIcon icon={faCheckCircle} color={colors.MidBlue} />\n      </FlexDiv>\n      {isSelected1 ? (\n        <NextButtonEnabled onClick={onNext}>다음</NextButtonEnabled>\n      ) : (\n        <NextButtonDisabled>다음</NextButtonDisabled>\n      )}\n    </ContainerwithLeftRightMargin>\n  );\n}\n","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/auth/AuthPage4.tsx",["155","156","157","158","159","160","161","162","163","164","165","166"],"import styled from \"styled-components\";\nimport {\n  ContainerFlexColumn,\n  ContainerwithLeftRightMargin,\n  Heading,\n  SubText,\n  colors,\n  NextButtonDisabled,\n  SubTextSpan,\n  NextButtonEnabled,\n} from \"../../Styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCheckCircle,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { faCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport routes from \"../../Routes\";\nimport { AuthState, AuthAction } from \"./types\";\n\ninterface Props {\n  onNext: () => void;\n  state: AuthState;\n  dispatch: React.Dispatch<AuthAction>;\n}\n\nexport default function AuthPage4({\n  onNext,\n  state,\n  dispatch,\n  ...props\n}: Props) {\n  const [isSelected1, setIsSelected1] = useState<boolean>(false);\n  const [isSelected2, setIsSelected2] = useState<boolean>(false);\n  const [isSelected3, setIsSelected3] = useState<boolean>(false);\n  const [isSelected4, setIsSelected4] = useState<boolean>(false);\n  const [isSelected5, setIsSelected5] = useState<boolean>(false);\n\n  return (\n    <ContainerwithLeftRightMargin>\n      <Heading style={{ fontSize: \"22px\", lineHeight: \"32px\" }}>\n        환영해요 {\":)\"}\n        <br />\n        아래 약관에 동의하시면 <br />\n        맛있는 모임이 시작돼요!\n      </Heading>\n      <SubText style={{ lineHeight: \"20px\", marginTop: \"13px\" }}>\n        친구들과 써클 모임 시작 전 필수 약관 내용에 먼저 <br />\n        동의해주세요\n      </SubText>\n      <TextSpanDiv\n        style={{ marginTop: \"30px\" }}\n        onClick={() => {\n          dispatch({ type: \"setAgreeAll\", payload: !state.agreeAll });\n        }}\n      >\n        {state.agreeAll ? (\n          <FontAwesomeIcon icon={faCheckCircle} color={colors.MidBlue} />\n        ) : (\n          <FontAwesomeIcon icon={faCircle} color={colors.LightGray} />\n        )}\n\n        <BlackTextSpan style={{ fontWeight: \"bold\", marginLeft: \"10px\" }}>\n          전체 동의\n        </BlackTextSpan>\n        <SubTextSpan>\n          {\"(\"}선택 항목 포함{\")\"}\n        </SubTextSpan>\n        <FontAwesomeIcon\n          icon={faChevronRight}\n          color={colors.LightGray}\n          style={{ position: \"absolute\", right: \"0%\" }}\n        />\n      </TextSpanDiv>\n      <TextSpanDiv\n        onClick={() => {\n          dispatch({ type: \"setAgree1\", payload: !state.agree1 });\n        }}\n      >\n        {state.agree1 ? (\n          <FontAwesomeIcon icon={faCheckCircle} color={colors.MidBlue} />\n        ) : (\n          <FontAwesomeIcon icon={faCircle} color={colors.LightGray} />\n        )}\n        <BlackTextSpan style={{ marginLeft: \"10px\" }}>\n          써클 이용약관\n        </BlackTextSpan>\n        <BlueTextSpan>\n          {\"(\"}필수{\")\"}\n        </BlueTextSpan>\n        <FontAwesomeIcon\n          icon={faChevronRight}\n          color={colors.LightGray}\n          style={{ position: \"absolute\", right: \"0%\" }}\n        />\n      </TextSpanDiv>\n      <TextSpanDiv\n        onClick={() => {\n          dispatch({ type: \"setAgree2\", payload: !state.agree2 });\n        }}\n      >\n        {state.agree2 ? (\n          <FontAwesomeIcon icon={faCheckCircle} color={colors.MidBlue} />\n        ) : (\n          <FontAwesomeIcon icon={faCircle} color={colors.LightGray} />\n        )}\n        <BlackTextSpan style={{ marginLeft: \"10px\" }}>\n          써클 개인정보 수집 및 이용동의\n        </BlackTextSpan>\n        <BlueTextSpan>\n          {\"(\"}필수{\")\"}\n        </BlueTextSpan>\n        <FontAwesomeIcon\n          icon={faChevronRight}\n          color={colors.LightGray}\n          style={{ position: \"absolute\", right: \"0%\" }}\n        />\n      </TextSpanDiv>\n      <TextSpanDiv\n        onClick={() => {\n          dispatch({ type: \"setAgree3\", payload: !state.agree3 });\n        }}\n      >\n        {state.agree3 ? (\n          <FontAwesomeIcon icon={faCheckCircle} color={colors.MidBlue} />\n        ) : (\n          <FontAwesomeIcon icon={faCircle} color={colors.LightGray} />\n        )}\n        <BlackTextSpan style={{ marginLeft: \"10px\" }}>\n          위치기반 서비스 이용동의\n        </BlackTextSpan>\n        <BlueTextSpan>\n          {\"(\"}필수{\")\"}\n        </BlueTextSpan>\n        <FontAwesomeIcon\n          icon={faChevronRight}\n          color={colors.LightGray}\n          style={{ position: \"absolute\", right: \"0%\" }}\n        />\n      </TextSpanDiv>\n      <TextSpanDiv\n        onClick={() => {\n          dispatch({ type: \"setAgree4\", payload: !state.agree4 });\n        }}\n      >\n        {state.agree4 ? (\n          <FontAwesomeIcon icon={faCheckCircle} color={colors.MidBlue} />\n        ) : (\n          <FontAwesomeIcon icon={faCircle} color={colors.LightGray} />\n        )}\n        <BlackTextSpan style={{ marginLeft: \"10px\" }}>\n          써클 마케팅 수신동의\n        </BlackTextSpan>\n        <GrayTextSpan>\n          {\"(\"}선택{\")\"}\n        </GrayTextSpan>\n        <FontAwesomeIcon\n          icon={faChevronRight}\n          color={colors.LightGray}\n          style={{ position: \"absolute\", right: \"0%\" }}\n        />\n      </TextSpanDiv>\n      {state.agree1 && state.agree3 && state.agree3 ? (\n        <Link\n          to={routes.places}\n          style={{ textDecoration: \"none\", color: colors.Black }}\n        >\n          <NextButtonEnabled>시작하기</NextButtonEnabled>\n        </Link>\n      ) : (\n        <NextButtonDisabled>시작하기</NextButtonDisabled>\n      )}\n    </ContainerwithLeftRightMargin>\n  );\n}\n\nconst TextSpanDiv = styled.div`\n  width: 100%;\n  margin-top: 8px;\n  position: relative;\n`;\n\nconst BlackTextSpan = styled(SubTextSpan)`\n  color: ${colors.Black};\n  font-size: 14px;\n`;\n\nconst BlueTextSpan = styled(SubTextSpan)`\n  color: ${colors.MidBlue};\n  font-size: 14px;\n`;\n\nconst GrayTextSpan = styled(SubTextSpan)`\n  font-size: 14px;\n`;\n","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/places/PlacesPage.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/components/places/Place.tsx",["167"],"import styled from \"styled-components\";\nimport { colors } from \"../../Styles\";\nimport Avartar from \"../shared/Avartar\";\nimport { Fragment } from \"react\";\n\ninterface Props {\n  placeImgSrc: string;\n  placeClosed?: boolean;\n  placeTag?: string;\n  placeParticipant: string[];\n  placeLocation?: string;\n  placeHeading: string;\n  placeDetail?: string;\n  placeTime?: string;\n  placeCondition?: string;\n}\n\nexport default function Place(props: Props) {\n  //const tag: string | null | undefined = props.feedTag;\n\n  return (\n    <PlaceContainer>\n      <PlaceLeftContainer>\n        {props.placeClosed && (\n          <>\n            <PlaceFull></PlaceFull>\n            <PlaceFullText>마감 되었어요</PlaceFullText>\n          </>\n        )}\n        {props.placeTag && (\n          <PlaceTag>\n            <p>{props.placeTag}</p>\n          </PlaceTag>\n        )}\n        <PlaceImg src={props.placeImgSrc} />\n      </PlaceLeftContainer>\n      <PlaceDescription>\n        <div\n          style={{\n            alignContent: \"center\",\n            display: \"flex\",\n            justifyContent: \"start\",\n          }}\n        >\n          <PlaceHeading>{props.placeHeading}</PlaceHeading>\n          <PlaceTimeSpan style={{ marginLeft: \"7px\" }}>\n            {props.placeTime}\n          </PlaceTimeSpan>\n          <PlaceTimeSpan\n            style={{\n              marginRight: \"3px\",\n              marginLeft: \"3px\",\n            }}\n          >\n            /\n          </PlaceTimeSpan>\n          <PlaceTimeSpan>{props.placeCondition}</PlaceTimeSpan>\n        </div>\n\n        <PlaceDetailP style={{ marginTop: \"5px\" }}>\n          {props.placeDetail}\n        </PlaceDetailP>\n\n        <AvartarContainer>\n          {props.placeParticipant.map((item, idx) => {\n            if (idx < 4) {\n              return (\n                <Fragment key={idx}>\n                  <Avartar src={item} marginRight={\"-5px\"} />\n                </Fragment>\n              );\n            }\n          })}\n\n          {props.placeParticipant.length > 4 ? (\n            <p>+{props.placeParticipant.length}</p>\n          ) : null}\n        </AvartarContainer>\n      </PlaceDescription>\n    </PlaceContainer>\n  );\n}\n\nconst PlaceContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 25px;\n`;\nconst PlaceLeftContainer = styled.div`\n  width: 100px;\n  height: 100px;\n  padding: 0px;\n  position: relative;\n`;\nconst PlaceImg = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 5px;\n  object-fit: cover;\n`;\n\nconst PlaceDescription = styled.div`\n  width: 205px;\n  padding-left: 16px;\n  padding-top: 5px;\n`;\n\nconst PlaceTag = styled.div`\n  position: absolute;\n  background-color: ${colors.MidBlue};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 5px;\n  height: 18px;\n  padding: 0px 5px 0px 5px;\n  top: -5px;\n  left: 8px;\n\n  p {\n    color: white;\n    font-weight: 700;\n    font-size: 11px;\n  }\n`;\n\nconst PlaceFull = styled.div`\n  position: absolute;\n  background-color: ${colors.Black};\n  width: 100%;\n  height: 100%;\n  opacity: 0.5;\n  border-radius: 5px;\n  justify-content: center;\n  display: flex;\n  align-items: center;\n`;\nconst PlaceFullText = styled.div`\n  color: white;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  font-weight: 800;\n  font-size: 14px;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst AvartarContainer = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  margin-top: 17px;\n  p {\n    position: absolute;\n    left: 110px;\n    font-size: 14px;\n    font-weight: 500;\n    color: ${colors.LightGray};\n  }\n`;\nconst PlaceDetailP = styled.p`\n  margin-top: 3px;\n  font-size: 10px;\n`;\n\nconst PlaceTimeSpan = styled.span`\n  margin-top: 3px;\n  font-size: 10px;\n  color: ${colors.LightGray};\n`;\n\nconst PlaceHeading = styled.span`\n  color: ${colors.StrongBlue};\n  font-size: 15px;\n  font-weight: 500;\n`;\n","/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/BackButtonWithNoBackground.tsx",["168"],"import styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { colors } from \"../../Styles\";\n\ninterface Props {\n  onPrev: () => void;\n}\n\nexport default function BackButtonWithNoBackground({ onPrev, ...props }: Props) {\n\n  return (\n    <div style={{ fontSize: \"12px\", marginTop: \"50px\", marginLeft: \"20px\" }}>\n      <FontAwesomeIcon\n        icon={faArrowLeft}\n        color={colors.Black}\n        size=\"2x\"\n        onClick={onPrev}\n      />\n    </div>\n  );\n}\n","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/auth/AuthPage.tsx",["169","170"],"import styled from \"styled-components\";\nimport { useState, Fragment, useReducer } from \"react\";\nimport { withRouter, useHistory, useLocation } from \"react-router-dom\";\nimport AuthPage1 from \"./AuthPage1\";\nimport AuthPage2 from \"./AuthPage2\";\nimport AuthPage3 from \"./AuthPage3\";\nimport AuthPage4 from \"./AuthPage4\";\nimport { ContainerFlexColumn } from \"../../Styles\";\nimport BackButtonWithNoBackground from \"../../components/shared/BackButtonWithNoBackground\";\nimport { AuthState, AuthAction } from \"./types\";\nimport routes from \"../../Routes\";\n\ninterface Props {}\n\nfunction reducer(state: AuthState, action: AuthAction): AuthState {\n  switch (action.type) {\n    case \"setPhoneNumber\":\n      return {\n        ...state,\n        phoneNumber: action.payload,\n      };\n    case \"setAge\":\n      return {\n        ...state,\n        age: action.payload,\n      };\n    case \"setGender\":\n      return {\n        ...state,\n        gender: action.payload,\n      };\n    case \"setName\":\n      return {\n        ...state,\n        name: action.payload,\n      };\n    case \"setUniversity\":\n      return {\n        ...state,\n        university: action.payload,\n      };\n    case \"setTitle\":\n      return {\n        ...state,\n        title: action.payload,\n      };\n    case \"setBio\":\n      return {\n        ...state,\n        bio: action.payload,\n      };\n    case \"setLocation\":\n      return {\n        ...state,\n        location: action.payload,\n      };\n    case \"setAgree1\":\n      if (action.payload === true) {\n        return {\n          ...state,\n          agree1: action.payload,\n        };\n      } else {\n        return {\n          ...state,\n          agree1: action.payload,\n          agreeAll: false,\n        };\n      }\n    case \"setAgree2\":\n      if (action.payload === true) {\n        return {\n          ...state,\n          agree2: action.payload,\n        };\n      } else {\n        return {\n          ...state,\n          agree2: action.payload,\n          agreeAll: false,\n        };\n      }\n    case \"setAgree3\":\n      if (action.payload === true) {\n        return {\n          ...state,\n          agree3: action.payload,\n        };\n      } else {\n        return {\n          ...state,\n          agree3: action.payload,\n          agreeAll: false,\n        };\n      }\n    case \"setAgree4\":\n      if (action.payload === true) {\n        return {\n          ...state,\n          agree4: action.payload,\n        };\n      } else {\n        return {\n          ...state,\n          agree4: action.payload,\n          agreeAll: false,\n        };\n      }\n\n    case \"setAgreeAll\":\n      return {\n        ...state,\n        agreeAll: action.payload,\n        agree1: action.payload,\n        agree2: action.payload,\n        agree3: action.payload,\n        agree4: action.payload,\n      };\n    case \"setStage1Valid\":\n      return {\n        ...state,\n        stage1Valid: action.payload,\n      };\n    case \"setStage2Valid\":\n      return {\n        ...state,\n        stage2Valid: action.payload,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nfunction AuthPage(props: Props) {\n  const [step, setStep] = useState(0);\n  const history = useHistory();\n  const location = useLocation<AuthState>();\n  const [state, dispatch] = useReducer(reducer, {\n    phoneNumber: \"\",\n    age: \"\",\n    gender: \"\",\n    name: \"\",\n    university: \"\",\n    title: \"\",\n    bio: \"\",\n    location: \"\",\n    agree1: false,\n    agree2: false,\n    agree3: false,\n    agree4: false,\n    agreeAll: false,\n    stage1Valid: false,\n    stage2Valid: false,\n  });\n\n  const handleNext = () => {\n    if (step < components.length) {\n      setStep((step) => step + 1);\n    } else {\n      // need to be updated\n      history.push(routes.places);\n    }\n  };\n  const prevStep = () => {\n    if (step > 0) setStep((step) => step - 1);\n    else history.push(\"/\");\n  };\n\n  const components = [\n    <AuthPage1 onNext={handleNext} state={state} dispatch={dispatch} />,\n    <AuthPage2 onNext={handleNext} state={state} dispatch={dispatch} />,\n    <AuthPage3 onNext={handleNext} state={state} dispatch={dispatch} />,\n    <AuthPage4 onNext={handleNext} state={state} dispatch={dispatch} />,\n  ];\n\n  return (\n    <ContainerFlexColumn>\n      <BackButtonWithNoBackground onPrev={prevStep} />\n      {components.map((component, index) => {\n        if (index === step) return <Fragment key={index}>{component}</Fragment>;\n        return null;\n      })}\n    </ContainerFlexColumn>\n  );\n}\nexport default withRouter(AuthPage);\n",{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":4,"column":3,"nodeType":"177","messageId":"178","endLine":4,"endColumn":12},{"ruleId":"175","severity":1,"message":"179","line":8,"column":3,"nodeType":"177","messageId":"178","endLine":8,"endColumn":6},{"ruleId":"175","severity":1,"message":"180","line":134,"column":7,"nodeType":"177","messageId":"178","endLine":134,"endColumn":18},{"ruleId":"175","severity":1,"message":"181","line":159,"column":7,"nodeType":"177","messageId":"178","endLine":159,"endColumn":24},{"ruleId":"175","severity":1,"message":"182","line":64,"column":7,"nodeType":"177","messageId":"178","endLine":64,"endColumn":23},{"ruleId":"175","severity":1,"message":"183","line":8,"column":3,"nodeType":"177","messageId":"178","endLine":8,"endColumn":10},{"ruleId":"175","severity":1,"message":"184","line":13,"column":8,"nodeType":"177","messageId":"178","endLine":13,"endColumn":14},{"ruleId":"175","severity":1,"message":"185","line":14,"column":8,"nodeType":"177","messageId":"178","endLine":14,"endColumn":25},{"ruleId":"175","severity":1,"message":"186","line":15,"column":8,"nodeType":"177","messageId":"178","endLine":15,"endColumn":29},{"ruleId":"175","severity":1,"message":"187","line":11,"column":3,"nodeType":"177","messageId":"178","endLine":11,"endColumn":19},{"ruleId":"175","severity":1,"message":"187","line":5,"column":3,"nodeType":"177","messageId":"178","endLine":5,"endColumn":19},{"ruleId":"175","severity":1,"message":"188","line":1,"column":8,"nodeType":"177","messageId":"178","endLine":1,"endColumn":14},{"ruleId":"175","severity":1,"message":"189","line":12,"column":3,"nodeType":"177","messageId":"178","endLine":12,"endColumn":10},{"ruleId":"175","severity":1,"message":"190","line":2,"column":17,"nodeType":"177","messageId":"178","endLine":2,"endColumn":25},{"ruleId":"175","severity":1,"message":"191","line":4,"column":3,"nodeType":"177","messageId":"178","endLine":4,"endColumn":22},{"ruleId":"175","severity":1,"message":"183","line":9,"column":3,"nodeType":"177","messageId":"178","endLine":9,"endColumn":10},{"ruleId":"175","severity":1,"message":"192","line":14,"column":8,"nodeType":"177","messageId":"178","endLine":14,"endColumn":14},{"ruleId":"175","severity":1,"message":"191","line":3,"column":3,"nodeType":"177","messageId":"178","endLine":3,"endColumn":22},{"ruleId":"175","severity":1,"message":"189","line":6,"column":3,"nodeType":"177","messageId":"178","endLine":6,"endColumn":10},{"ruleId":"175","severity":1,"message":"183","line":8,"column":3,"nodeType":"177","messageId":"178","endLine":8,"endColumn":10},{"ruleId":"175","severity":1,"message":"188","line":1,"column":8,"nodeType":"177","messageId":"178","endLine":1,"endColumn":14},{"ruleId":"175","severity":1,"message":"183","line":7,"column":3,"nodeType":"177","messageId":"178","endLine":7,"endColumn":10},{"ruleId":"175","severity":1,"message":"191","line":3,"column":3,"nodeType":"177","messageId":"178","endLine":3,"endColumn":22},{"ruleId":"175","severity":1,"message":"193","line":18,"column":20,"nodeType":"177","messageId":"178","endLine":18,"endColumn":29},{"ruleId":"175","severity":1,"message":"194","line":35,"column":10,"nodeType":"177","messageId":"178","endLine":35,"endColumn":21},{"ruleId":"175","severity":1,"message":"195","line":35,"column":23,"nodeType":"177","messageId":"178","endLine":35,"endColumn":37},{"ruleId":"175","severity":1,"message":"196","line":36,"column":10,"nodeType":"177","messageId":"178","endLine":36,"endColumn":21},{"ruleId":"175","severity":1,"message":"197","line":36,"column":23,"nodeType":"177","messageId":"178","endLine":36,"endColumn":37},{"ruleId":"175","severity":1,"message":"198","line":37,"column":10,"nodeType":"177","messageId":"178","endLine":37,"endColumn":21},{"ruleId":"175","severity":1,"message":"199","line":37,"column":23,"nodeType":"177","messageId":"178","endLine":37,"endColumn":37},{"ruleId":"175","severity":1,"message":"200","line":38,"column":10,"nodeType":"177","messageId":"178","endLine":38,"endColumn":21},{"ruleId":"175","severity":1,"message":"201","line":38,"column":23,"nodeType":"177","messageId":"178","endLine":38,"endColumn":37},{"ruleId":"175","severity":1,"message":"202","line":39,"column":10,"nodeType":"177","messageId":"178","endLine":39,"endColumn":21},{"ruleId":"175","severity":1,"message":"203","line":39,"column":23,"nodeType":"177","messageId":"178","endLine":39,"endColumn":37},{"ruleId":"204","severity":1,"message":"205","line":65,"column":51,"nodeType":"206","messageId":"207","endLine":65,"endColumn":53},{"ruleId":"175","severity":1,"message":"188","line":1,"column":8,"nodeType":"177","messageId":"178","endLine":1,"endColumn":14},{"ruleId":"175","severity":1,"message":"188","line":1,"column":8,"nodeType":"177","messageId":"178","endLine":1,"endColumn":14},{"ruleId":"175","severity":1,"message":"208","line":137,"column":9,"nodeType":"177","messageId":"178","endLine":137,"endColumn":17},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"@typescript-eslint/no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Tag' is defined but never used.","'TagOnDetail' is assigned a value but never used.","'TagInnerContainer' is assigned a value but never used.","'ModifyProfileBtn' is assigned a value but never used.","'MainBtn' is defined but never used.","'Header' is defined but never used.","'HeaderTextHeading' is defined but never used.","'HeaderTextDescription' is defined but never used.","'ProcedureHeading' is defined but never used.","'styled' is defined but never used.","'SubText' is defined but never used.","'useState' is defined but never used.","'ContainerFlexColumn' is defined but never used.","'routes' is defined but never used.","'useEffect' is defined but never used.","'isSelected1' is assigned a value but never used.","'setIsSelected1' is assigned a value but never used.","'isSelected2' is assigned a value but never used.","'setIsSelected2' is assigned a value but never used.","'isSelected3' is assigned a value but never used.","'setIsSelected3' is assigned a value but never used.","'isSelected4' is assigned a value but never used.","'setIsSelected4' is assigned a value but never used.","'isSelected5' is assigned a value but never used.","'setIsSelected5' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'location' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]