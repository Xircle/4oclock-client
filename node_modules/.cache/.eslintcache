[{"/Users/jeong-ideun/Desktop/xircle-client2/src/index.tsx":"1","/Users/jeong-ideun/Desktop/xircle-client2/src/App.tsx":"2","/Users/jeong-ideun/Desktop/xircle-client2/src/Styles.tsx":"3","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/feed/FeedPage.tsx":"4","/Users/jeong-ideun/Desktop/xircle-client2/src/Routes.ts":"5","/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Avartar.tsx":"6","/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Header/Header.tsx":"7","/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Header/HeaderPic.tsx":"8","/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Header/HeaderTextHeading.tsx":"9","/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Header/HeaderTextDescription.tsx":"10","/Users/jeong-ideun/Desktop/xircle-client2/src/components/feed/Feed.tsx":"11","/Users/jeong-ideun/Desktop/xircle-client2/src/dummyResources/dummyData.tsx":"12","/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/BottomNavBar.tsx":"13","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/friends/FriendsPage.tsx":"14","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/mypage/MyPage.tsx":"15","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/place/PlacePage.tsx":"16","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/place/BookingPage.tsx":"17","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/place/BookingConfirmPage.tsx":"18","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/RequestPage.tsx":"19"},{"size":168,"mtime":1630994100668,"results":"20","hashOfConfig":"21"},{"size":1436,"mtime":1631137645740,"results":"22","hashOfConfig":"21"},{"size":3081,"mtime":1631138917127,"results":"23","hashOfConfig":"21"},{"size":3138,"mtime":1631137840684,"results":"24","hashOfConfig":"21"},{"size":207,"mtime":1631137599270,"results":"25","hashOfConfig":"21"},{"size":352,"mtime":1631071240897,"results":"26","hashOfConfig":"21"},{"size":503,"mtime":1631075667852,"results":"27","hashOfConfig":"21"},{"size":269,"mtime":1631072520252,"results":"28","hashOfConfig":"21"},{"size":385,"mtime":1631074624777,"results":"29","hashOfConfig":"21"},{"size":334,"mtime":1631075401473,"results":"30","hashOfConfig":"21"},{"size":3205,"mtime":1631113930108,"results":"31","hashOfConfig":"21"},{"size":2766,"mtime":1631104341630,"results":"32","hashOfConfig":"21"},{"size":1916,"mtime":1631119070283,"results":"33","hashOfConfig":"21"},{"size":2557,"mtime":1631141879715,"results":"34","hashOfConfig":"21"},{"size":359,"mtime":1631119692078,"results":"35","hashOfConfig":"21"},{"size":4754,"mtime":1631121085748,"results":"36","hashOfConfig":"21"},{"size":4445,"mtime":1631135147161,"results":"37","hashOfConfig":"21"},{"size":1573,"mtime":1631135099284,"results":"38","hashOfConfig":"21"},{"size":1037,"mtime":1631138880429,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"9mvhso",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jeong-ideun/Desktop/xircle-client2/src/index.tsx",[],["81","82"],"/Users/jeong-ideun/Desktop/xircle-client2/src/App.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/Styles.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/pages/feed/FeedPage.tsx",["83"],"/Users/jeong-ideun/Desktop/xircle-client2/src/Routes.ts",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Avartar.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Header/Header.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Header/HeaderPic.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Header/HeaderTextHeading.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Header/HeaderTextDescription.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/components/feed/Feed.tsx",["84"],"import styled from \"styled-components\";\nimport { colors } from \"../../Styles\";\nimport Avartar from \"../shared/Avartar\";\n\ninterface Props {\n  placeImgSrc: string;\n  feedClosed?: boolean;\n  feedTag?: string;\n  feedParticipant: string[];\n  feedLocation?: string;\n  feedHeading: string;\n  feedDetail?: string;\n  feedTime?: string;\n  feedCondition?: string;\n}\n\nexport default function Feed(props: Props) {\n  //const tag: string | null | undefined = props.feedTag;\n\n  return (\n    <FeedContainer>\n      <FeedLeftContainer>\n        {props.feedClosed && (\n          <FeedFull>\n            <p>마감</p>\n          </FeedFull>\n        )}\n        {props.feedTag && (\n          <FeedTag>\n            <p>{props.feedTag}</p>\n          </FeedTag>\n        )}\n        <FeedImg src={props.placeImgSrc} />\n      </FeedLeftContainer>\n      <FeedDescription>\n        <FeedHeading>{props.feedHeading}</FeedHeading>\n        <FeedDetailP>{props.feedDetail}</FeedDetailP>\n\n        <FeedTimeP>{props.feedLocation}</FeedTimeP>\n        <FeedTimeP style={{ marginRight: \"3px\", marginLeft: \"3px\" }}>\n          /\n        </FeedTimeP>\n        <FeedTimeP>{props.feedTime}</FeedTimeP>\n        <FeedTimeP style={{ marginLeft: \"8px\" }}>\n          {props.feedCondition}\n        </FeedTimeP>\n        <AvartarContainer>\n          {props.feedParticipant.map((item, idx) => {\n            if (idx < 4) {\n              return <Avartar src={item} marginRight={\"-5px\"} />;\n            }\n          })}\n\n          {props.feedParticipant.length > 4 ? (\n            <p>+{props.feedParticipant.length}</p>\n          ) : null}\n        </AvartarContainer>\n      </FeedDescription>\n    </FeedContainer>\n  );\n}\n\nconst FeedContainer = styled.div`\n  width: 90%;\n  display: flex;\n  justify-content: center;\n  margin-top: 15px;\n`;\nconst FeedLeftContainer = styled.div`\n  width: 100px;\n  height: 100px;\n  padding: 0px;\n  position: relative;\n`;\nconst FeedImg = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 10%;\n  object-fit: cover;\n`;\n\nconst FeedDescription = styled.div`\n  width: 200px;\n  padding-left: 10px;\n  padding-top: 5px;\n`;\n\nconst FeedTag = styled.div`\n  position: absolute;\n  background-color: ${colors.MidBlue};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 5px;\n  height: 18px;\n  padding: 0px 5px 0px 5px;\n  top: -5px;\n  transform: translateX(-8px);\n\n  p {\n    color: white;\n    font-weight: 700;\n    font-size: 11px;\n  }\n`;\n\nconst FeedFull = styled.div`\n  position: absolute;\n  background-color: gray;\n  width: 100%;\n  height: 100%;\n  opacity: 0.5;\n  border-radius: 15%;\n  justify-content: center;\n  display: flex;\n  align-items: center;\n  p {\n    color: white;\n    font-weight: 800;\n  }\n`;\n\nconst AvartarContainer = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  p {\n    position: absolute;\n    left: 110px;\n    font-size: 14px;\n    font-weight: 500;\n    color: ${colors.LightGray};\n  }\n`;\nconst FeedDetailP = styled.p`\n  margin-top: 3px;\n  font-size: 10px;\n`;\n\nconst FeedTimeP = styled.span`\n  margin-top: 3px;\n  font-size: 10px;\n  color: ${colors.LightGray};\n`;\n\nconst FeedHeading = styled.h4`\n  color: ${colors.StrongBlue};\n  font-size: 15px;\n  font-weight: 400;\n`;\n","/Users/jeong-ideun/Desktop/xircle-client2/src/dummyResources/dummyData.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/BottomNavBar.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/pages/friends/FriendsPage.tsx",["85"],"/Users/jeong-ideun/Desktop/xircle-client2/src/pages/mypage/MyPage.tsx",["86","87"],"import styled from \"styled-components\";\nimport BottomNavBar from \"../../components/shared/BottomNavBar\";\nimport { Container } from \"../../Styles\";\nimport routes from \"../../Routes\";\n\ninterface Props {}\n\nexport default function MyPage(props: Props) {\n  return (\n    <Container>\n      <BottomNavBar selectedItem=\"mypage\"></BottomNavBar>\n    </Container>\n  );\n}\n","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/place/PlacePage.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/pages/place/BookingPage.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/pages/place/BookingConfirmPage.tsx",["88"],"/Users/jeong-ideun/Desktop/xircle-client2/src/pages/RequestPage.tsx",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":2,"column":17,"nodeType":"95","messageId":"96","endLine":2,"endColumn":25},{"ruleId":"97","severity":1,"message":"98","line":48,"column":50,"nodeType":"99","messageId":"100","endLine":48,"endColumn":52},{"ruleId":"93","severity":1,"message":"101","line":90,"column":7,"nodeType":"95","messageId":"96","endLine":90,"endColumn":18},{"ruleId":"93","severity":1,"message":"102","line":1,"column":8,"nodeType":"95","messageId":"96","endLine":1,"endColumn":14},{"ruleId":"93","severity":1,"message":"103","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":14},{"ruleId":"93","severity":1,"message":"104","line":7,"column":3,"nodeType":"95","messageId":"96","endLine":7,"endColumn":9},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'TagOnDetail' is assigned a value but never used.","'styled' is defined but never used.","'routes' is defined but never used.","'colors' is defined but never used.","no-global-assign","no-unsafe-negation"]