[{"/Users/jeong-ideun/Desktop/xircle-client2/src/index.tsx":"1","/Users/jeong-ideun/Desktop/xircle-client2/src/App.tsx":"2","/Users/jeong-ideun/Desktop/xircle-client2/src/Styles.tsx":"3","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/feed/FeedPage.tsx":"4","/Users/jeong-ideun/Desktop/xircle-client2/src/Routes.ts":"5","/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Avartar.tsx":"6","/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Header/Header.tsx":"7","/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Header/HeaderPic.tsx":"8","/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Header/HeaderTextHeading.tsx":"9","/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Header/HeaderTextDescription.tsx":"10","/Users/jeong-ideun/Desktop/xircle-client2/src/components/feed/Feed.tsx":"11","/Users/jeong-ideun/Desktop/xircle-client2/src/dummyResources/dummyData.tsx":"12","/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/BottomNavBar.tsx":"13","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/friends/FriendsPage.tsx":"14","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/mypage/MyPage.tsx":"15","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/place/PlacePage.tsx":"16","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/place/BookingPage.tsx":"17","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/place/BookingConfirmPage.tsx":"18","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/RequestPage.tsx":"19","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/mypage/MyXirclePage.tsx":"20","/Users/jeong-ideun/Desktop/xircle-client2/src/components/mypage/RegisteredFeed.tsx":"21","/Users/jeong-ideun/Desktop/xircle-client2/src/components/mypage/registeredFeed.tsx":"22","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/mypage/ModifyProfilePage.tsx":"23"},{"size":168,"mtime":1630994100668,"results":"24","hashOfConfig":"25"},{"size":1768,"mtime":1631189104228,"results":"26","hashOfConfig":"25"},{"size":3921,"mtime":1631189968837,"results":"27","hashOfConfig":"25"},{"size":3138,"mtime":1631137840684,"results":"28","hashOfConfig":"25"},{"size":287,"mtime":1631188980871,"results":"29","hashOfConfig":"25"},{"size":352,"mtime":1631071240897,"results":"30","hashOfConfig":"25"},{"size":503,"mtime":1631075667852,"results":"31","hashOfConfig":"25"},{"size":269,"mtime":1631072520252,"results":"32","hashOfConfig":"25"},{"size":385,"mtime":1631074624777,"results":"33","hashOfConfig":"25"},{"size":334,"mtime":1631075401473,"results":"34","hashOfConfig":"25"},{"size":3205,"mtime":1631113930108,"results":"35","hashOfConfig":"25"},{"size":2805,"mtime":1631177461099,"results":"36","hashOfConfig":"25"},{"size":1916,"mtime":1631119070283,"results":"37","hashOfConfig":"25"},{"size":3492,"mtime":1631189953892,"results":"38","hashOfConfig":"25"},{"size":3006,"mtime":1631189222789,"results":"39","hashOfConfig":"25"},{"size":4780,"mtime":1631189610851,"results":"40","hashOfConfig":"25"},{"size":4587,"mtime":1631178845416,"results":"41","hashOfConfig":"25"},{"size":1615,"mtime":1631178971600,"results":"42","hashOfConfig":"25"},{"size":1102,"mtime":1631178248238,"results":"43","hashOfConfig":"25"},{"size":1432,"mtime":1631185557657,"results":"44","hashOfConfig":"25"},{"size":1705,"mtime":1631185309432,"results":"45","hashOfConfig":"25"},{"size":1705,"mtime":1631185309432,"results":"46","hashOfConfig":"25"},{"size":1617,"mtime":1631190571947,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"9mvhso",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jeong-ideun/Desktop/xircle-client2/src/index.tsx",[],["100","101"],"/Users/jeong-ideun/Desktop/xircle-client2/src/App.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/Styles.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/pages/feed/FeedPage.tsx",["102"],"import styled from \"styled-components\";\nimport React, { useState } from \"react\";\nimport MainPicDummy from \"../../dummyResources/MainPicDummy.jpg\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport \"./FeedPage.css\";\nimport { Option } from \"react-dropdown\";\nimport { colors, Container } from \"../../Styles\";\nimport Header from \"../../components/shared/Header/Header\";\nimport HeaderTextHeading from \"../../components/shared/Header/HeaderTextHeading\";\nimport HeaderTextDescription from \"../../components/shared/Header/HeaderTextDescription\";\nimport Feed from \"../../components/feed/Feed\";\nimport { feedDummyData } from \"../../dummyResources/dummyData\";\nimport BottomNavBar from \"../../components/shared/BottomNavBar\";\nimport { Link } from \"react-router-dom\";\nimport routes from \"../../Routes\";\n\nconst options: Option[] = [\n  {\n    value: \"안암근처\",\n    label: \"안암근처\",\n    className: \"drop-down-option\",\n  },\n  {\n    value: \"신촌근처\",\n    label: \"신촌근처\",\n    className: \"drop-down-option\",\n  },\n  {\n    value: \"혜화근처\",\n    label: \"혜화근처\",\n    className: \"drop-down-option\",\n  },\n];\n\ninterface Props {}\n\nexport default function FeedPage(props: Props) {\n  return (\n    <Container>\n      <Top>\n        <TopWrapper>\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\n            <Dropdown\n              controlClassName=\"drop-down-className\"\n              options={options}\n              value={options[0]}\n            />\n          </div>\n          <Link to={routes.request} style={{ textDecoration: \"none\" }}>\n            <RequestP>식탁 건의하기</RequestP>\n          </Link>\n        </TopWrapper>\n      </Top>\n      <Header src={MainPicDummy}>\n        <HeaderTextHeading>친구들과 놀러가요!</HeaderTextHeading>\n        <HeaderTextDescription>\n          취향이 통하는 대학친구들과 즐기는 공간\n        </HeaderTextDescription>\n      </Header>\n      {feedDummyData.map((item) => {\n        return (\n          <Link\n            to={routes.place}\n            style={{ textDecoration: \"none\", color: colors.Black }}\n          >\n            <Feed\n              placeImgSrc={item.placeImgSrc}\n              feedParticipant={item.feedParticipant}\n              feedClosed={item.feedClosed}\n              feedHeading={item.feedHeading}\n              feedDetail={item.feedDetail}\n              feedLocation={item.feedLocation}\n              feedTime={item.feedTime}\n              feedCondition={item.feedCondition}\n              feedTag={item.feedTag}\n            ></Feed>\n          </Link>\n        );\n      })}\n      <BottomNavBar selectedItem=\"feed\" />\n    </Container>\n  );\n}\n\nconst Top = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  position: --webkit-sticky;\n  position: sticky;\n  top: 0;\n  z-index: 3;\n  background-color: white;\n`;\n\nconst TopWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  padding: 12px 12px 12px 0;\n  justify-content: space-between;\n  margin-top: 10px;\n`;\n\nconst RequestP = styled.div`\n  font-size: 16px;\n  font-weight: 600;\n  color: ${colors.MidGray};\n  padding-top: 8px;\n`;\n","/Users/jeong-ideun/Desktop/xircle-client2/src/Routes.ts",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Avartar.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Header/Header.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Header/HeaderPic.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Header/HeaderTextHeading.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/Header/HeaderTextDescription.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/components/feed/Feed.tsx",["103"],"import styled from \"styled-components\";\nimport { colors } from \"../../Styles\";\nimport Avartar from \"../shared/Avartar\";\n\ninterface Props {\n  placeImgSrc: string;\n  feedClosed?: boolean;\n  feedTag?: string;\n  feedParticipant: string[];\n  feedLocation?: string;\n  feedHeading: string;\n  feedDetail?: string;\n  feedTime?: string;\n  feedCondition?: string;\n}\n\nexport default function Feed(props: Props) {\n  //const tag: string | null | undefined = props.feedTag;\n\n  return (\n    <FeedContainer>\n      <FeedLeftContainer>\n        {props.feedClosed && (\n          <FeedFull>\n            <p>마감</p>\n          </FeedFull>\n        )}\n        {props.feedTag && (\n          <FeedTag>\n            <p>{props.feedTag}</p>\n          </FeedTag>\n        )}\n        <FeedImg src={props.placeImgSrc} />\n      </FeedLeftContainer>\n      <FeedDescription>\n        <FeedHeading>{props.feedHeading}</FeedHeading>\n        <FeedDetailP>{props.feedDetail}</FeedDetailP>\n\n        <FeedTimeP>{props.feedLocation}</FeedTimeP>\n        <FeedTimeP style={{ marginRight: \"3px\", marginLeft: \"3px\" }}>\n          /\n        </FeedTimeP>\n        <FeedTimeP>{props.feedTime}</FeedTimeP>\n        <FeedTimeP style={{ marginLeft: \"8px\" }}>\n          {props.feedCondition}\n        </FeedTimeP>\n        <AvartarContainer>\n          {props.feedParticipant.map((item, idx) => {\n            if (idx < 4) {\n              return <Avartar src={item} marginRight={\"-5px\"} />;\n            }\n          })}\n\n          {props.feedParticipant.length > 4 ? (\n            <p>+{props.feedParticipant.length}</p>\n          ) : null}\n        </AvartarContainer>\n      </FeedDescription>\n    </FeedContainer>\n  );\n}\n\nconst FeedContainer = styled.div`\n  width: 90%;\n  display: flex;\n  justify-content: center;\n  margin-top: 15px;\n`;\nconst FeedLeftContainer = styled.div`\n  width: 100px;\n  height: 100px;\n  padding: 0px;\n  position: relative;\n`;\nconst FeedImg = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 10%;\n  object-fit: cover;\n`;\n\nconst FeedDescription = styled.div`\n  width: 200px;\n  padding-left: 10px;\n  padding-top: 5px;\n`;\n\nconst FeedTag = styled.div`\n  position: absolute;\n  background-color: ${colors.MidBlue};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 5px;\n  height: 18px;\n  padding: 0px 5px 0px 5px;\n  top: -5px;\n  transform: translateX(-8px);\n\n  p {\n    color: white;\n    font-weight: 700;\n    font-size: 11px;\n  }\n`;\n\nconst FeedFull = styled.div`\n  position: absolute;\n  background-color: gray;\n  width: 100%;\n  height: 100%;\n  opacity: 0.5;\n  border-radius: 15%;\n  justify-content: center;\n  display: flex;\n  align-items: center;\n  p {\n    color: white;\n    font-weight: 800;\n  }\n`;\n\nconst AvartarContainer = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  p {\n    position: absolute;\n    left: 110px;\n    font-size: 14px;\n    font-weight: 500;\n    color: ${colors.LightGray};\n  }\n`;\nconst FeedDetailP = styled.p`\n  margin-top: 3px;\n  font-size: 10px;\n`;\n\nconst FeedTimeP = styled.span`\n  margin-top: 3px;\n  font-size: 10px;\n  color: ${colors.LightGray};\n`;\n\nconst FeedHeading = styled.h4`\n  color: ${colors.StrongBlue};\n  font-size: 15px;\n  font-weight: 400;\n`;\n","/Users/jeong-ideun/Desktop/xircle-client2/src/dummyResources/dummyData.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/components/shared/BottomNavBar.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/pages/friends/FriendsPage.tsx",["104","105"],"/Users/jeong-ideun/Desktop/xircle-client2/src/pages/mypage/MyPage.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/pages/place/PlacePage.tsx",["106"],"/Users/jeong-ideun/Desktop/xircle-client2/src/pages/place/BookingPage.tsx",["107"],"import styled from \"styled-components\";\nimport BottomNavBar from \"../../components/shared/BottomNavBar\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport {\n  Container,\n  MainBtn,\n  ProcedureHeading,\n  SelectionBox,\n  SelectionMainText,\n  SelectionSubText,\n  colors,\n  Tag,\n  Heading,\n  ContainerwithLeftRightMargin,\n} from \"../../Styles\";\nimport routes from \"../../Routes\";\n\ninterface Props {}\n\nexport default function BookingPage(props: Props) {\n  const [isSelected1, setIsSelected1] = useState<boolean>(false);\n  const [isSelected2, setIsSelected2] = useState<boolean>(false);\n  return (\n    <Container>\n      <ContainerwithLeftRightMargin>\n        <Heading>막걸리 찬가</Heading>\n        <SelectionBoxBooking onClick={() => setIsSelected1(!isSelected1)}>\n          <SelectionMainTextBooking>\n            다음주 수요일 오후 4시\n            <TagBooking>\n              <p>4인 모임</p>\n            </TagBooking>\n          </SelectionMainTextBooking>\n          <SelectionSubTextBooking>5명 참가예정</SelectionSubTextBooking>\n          <CheckIcon>\n            {isSelected1 ? (\n              <FontAwesomeIcon icon={faCheckCircle} color={colors.MidBlue} />\n            ) : (\n              <FontAwesomeIcon icon={faCircle} color={colors.LightGray} />\n            )}\n          </CheckIcon>\n        </SelectionBoxBooking>\n        <SelectionBoxBooking onClick={() => setIsSelected2(!isSelected2)}>\n          <SelectionMainTextBooking>\n            다음주 수요일 오후 4시\n            <TagBooking>\n              <p>2인 모임</p>\n            </TagBooking>\n          </SelectionMainTextBooking>\n          <SelectionSubTextBooking>7명 참가예정</SelectionSubTextBooking>\n          <CheckIcon>\n            {isSelected2 ? (\n              <FontAwesomeIcon icon={faCheckCircle} color={colors.MidBlue} />\n            ) : (\n              <FontAwesomeIcon icon={faCircle} color={colors.LightGray} />\n            )}\n          </CheckIcon>\n        </SelectionBoxBooking>\n        <Instruction>\n          <InstructionHeading>식탁 모임은 이렇게 진행돼요!</InstructionHeading>\n          <InstructionDetail>\n            1. 같은 시간을 신청한 친구들과 4인/2인 랜덤 그룹을 만들어 드려요\n            <br />\n            2. 모임 당일 단톡을 만들어드려요! 친해지는 시간을 가져보세요\n            <br />\n            3. 지정된 장소와 시간에 만나서 놀아요.\n            <br />\n          </InstructionDetail>\n          <InstructionDetail>\n            단톡이 만들어지기전에 적어주신 전화번호로 연락을 드릴게요!\n          </InstructionDetail>\n        </Instruction>\n        {isSelected1 || isSelected2 ? (\n          <Link to={routes.bookingconfirm} style={{ textDecoration: \"none\" }}>\n            <EnabledMainBtnBooking>놀러가기</EnabledMainBtnBooking>\n          </Link>\n        ) : (\n          <DisabledMainBtnBooking>놀러가기</DisabledMainBtnBooking>\n        )}\n      </ContainerwithLeftRightMargin>\n\n      <BottomNavBar selectedItem=\"feed\" />\n    </Container>\n  );\n}\n\nconst SelectionBoxBooking = styled(SelectionBox)`\n  margin-top: 30px;\n  position: relative;\n  font-size: 24px;\n`;\n\nconst EnabledMainBtnBooking = styled(MainBtn)`\n  margin-top: 30px;\n  width: 100%;\n`;\n\nconst DisabledMainBtnBooking = styled(MainBtn)`\n  margin-top: 30px;\n  width: 100%;\n  background-color: ${colors.LightGray};\n`;\n\nconst SelectionMainTextBooking = styled(SelectionMainText)`\n  margin-left: 32px;\n  position: relative;\n`;\n\nconst SelectionSubTextBooking = styled(SelectionSubText)`\n  margin-left: 32px;\n`;\n\nconst Instruction = styled.div`\n  width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 30px;\n  min-height: 200px;\n  background-color: #f8fafd;\n  border-radius: 5px;\n  display: content;\n  justify-content: center;\n  align-items: center;\n  color: ${colors.MidGray};\n`;\n\nconst InstructionHeading = styled.p`\n  font-weight: bold;\n  font-size: 13px;\n  line-height: 16px;\n  margin-left: 12px;\n  padding-top: 10px;\n`;\n\nconst InstructionDetail = styled.p`\n  margin-top: 5px;\n  font-weight: 500;\n  font-size: 11px;\n  line-height: 18px;\n  letter-spacing: -0.005em;\n  margin-left: 12px;\n`;\n\nconst TagBooking = styled(Tag)`\n  top: -11px;\n  left: 150px;\n  transform: translate(0, 50%);\n`;\n\nconst CheckIcon = styled.div`\n  position: absolute;\n  right: 10%;\n`;\n","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/place/BookingConfirmPage.tsx",["108","109"],"import styled from \"styled-components\";\nimport BottomNavBar from \"../../components/shared/BottomNavBar\";\nimport {\n  Container,\n  ProcedureHeading,\n  SubText,\n  colors,\n  MainBtn,\n  Heading,\n  ContainerwithLeftRightMargin,\n} from \"../../Styles\";\n\ninterface Props {}\n\nexport default function BookingConfirmPage(props: Props) {\n  return (\n    <Container>\n      <ContainerwithLeftRightMargin>\n        <Heading>참여 신청 완료</Heading>\n        <SubTextBookingBookingConfirm>\n          단톡이 만들어지면 적어주신 전화번호로 연락을 드릴게요!\n          <br />\n          <br />\n          모임 시작 전 참여가 어려워진 경우, 반드시 미리\n          <b> 마이페이지 {\">\"} 문의하기</b>를 통해서 알려주세요.\n          <br />\n          <br />\n          모임에 참여하는 친구들을 존중하고 따뜻한 문화를 함께 만들어나가요.\n          <br />\n          <br />\n          무단으로 불참하거나 함께하는 친구들에게 피해를 주는 경우, 이용에\n          제재를 받을 수 있습니다.\n        </SubTextBookingBookingConfirm>\n        <MainBtnBookingConfirm>\n          참여하는 친구들 프로필 보기\n        </MainBtnBookingConfirm>\n      </ContainerwithLeftRightMargin>\n      <BottomNavBar selectedItem=\"feed\" />\n    </Container>\n  );\n}\n\nconst SubTextBookingBookingConfirm = styled(SubText)`\n  margin-top: 40px;\n  width: 315px;\n  line-height: 1.2em;\n  font-weight: 500;\n  font-size: 11px;\n  b {\n    font-weight: 900;\n  }\n`;\n\nconst MainBtnBookingConfirm = styled(MainBtn)`\n  margin-top: 100px;\n  width: 300px;\n`;\n","/Users/jeong-ideun/Desktop/xircle-client2/src/pages/RequestPage.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/pages/mypage/MyXirclePage.tsx",["110"],"import styled from \"styled-components\";\nimport {\n  ContainerFlexColumn,\n  ContainerwithLeftRightMargin,\n  Heading,\n  colors,\n} from \"../../Styles\";\nimport BottomNavBar from \"../../components/shared/BottomNavBar\";\nimport { feedDummyData } from \"../../dummyResources/dummyData\";\nimport { Link } from \"react-router-dom\";\nimport routes from \"../../Routes\";\nimport RegisteredFeed from \"../../components/mypage/RegisteredFeed\";\n\ninterface Props {}\n\nexport default function MyXirclePage(props: Props) {\n  return (\n    <ContainerFlexColumn>\n      <ContainerwithLeftRightMargin>\n        <Heading>내가 신청한 써클</Heading>\n        {feedDummyData.map((item) => {\n        return (\n          <Link\n            to={routes.place}\n            style={{ textDecoration: \"none\", color: colors.Black }}\n          >\n            <RegisteredFeed\n              placeImgSrc={item.placeImgSrc}\n              feedParticipant={item.feedParticipant}\n              feedClosed={item.feedClosed}\n              feedHeading={item.feedHeading}\n              feedDetail={item.feedDetail}\n              feedLocation={item.feedLocation}\n              feedTime={item.feedTime}\n              feedCondition={item.feedCondition}\n              feedTag={item.feedTag}\n            ></RegisteredFeed>\n          </Link>\n        );\n      })}\n      </ContainerwithLeftRightMargin>\n      <BottomNavBar selectedItem=\"mypage\"></BottomNavBar>\n    </ContainerFlexColumn>\n  );\n}\n","/Users/jeong-ideun/Desktop/xircle-client2/src/components/mypage/RegisteredFeed.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/components/mypage/registeredFeed.tsx",[],"/Users/jeong-ideun/Desktop/xircle-client2/src/pages/mypage/ModifyProfilePage.tsx",["111"],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":2,"column":17,"nodeType":"118","messageId":"119","endLine":2,"endColumn":25},{"ruleId":"120","severity":1,"message":"121","line":48,"column":50,"nodeType":"122","messageId":"123","endLine":48,"endColumn":52},{"ruleId":"116","severity":1,"message":"124","line":4,"column":3,"nodeType":"118","messageId":"119","endLine":4,"endColumn":12},{"ruleId":"116","severity":1,"message":"125","line":8,"column":3,"nodeType":"118","messageId":"119","endLine":8,"endColumn":6},{"ruleId":"116","severity":1,"message":"126","line":8,"column":3,"nodeType":"118","messageId":"119","endLine":8,"endColumn":10},{"ruleId":"116","severity":1,"message":"127","line":11,"column":3,"nodeType":"118","messageId":"119","endLine":11,"endColumn":19},{"ruleId":"116","severity":1,"message":"127","line":5,"column":3,"nodeType":"118","messageId":"119","endLine":5,"endColumn":19},{"ruleId":"116","severity":1,"message":"128","line":7,"column":3,"nodeType":"118","messageId":"119","endLine":7,"endColumn":9},{"ruleId":"116","severity":1,"message":"129","line":1,"column":8,"nodeType":"118","messageId":"119","endLine":1,"endColumn":14},{"ruleId":"116","severity":1,"message":"130","line":2,"column":8,"nodeType":"118","messageId":"119","endLine":2,"endColumn":20},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Container' is defined but never used.","'Tag' is defined but never used.","'MainBtn' is defined but never used.","'ProcedureHeading' is defined but never used.","'colors' is defined but never used.","'styled' is defined but never used.","'BottomNavBar' is defined but never used.","no-global-assign","no-unsafe-negation"]