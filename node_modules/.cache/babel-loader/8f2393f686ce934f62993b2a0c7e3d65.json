{"ast":null,"code":"var _jsxFileName = \"/Users/jeong-ideun/Desktop/xircle-client2/src/components/feed/Feed.tsx\";\nimport styled from \"styled-components\";\nimport { colors } from \"../../Styles\";\nimport Avartar from \"../shared/Avartar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Feed(props) {\n  //const tag: string | null | undefined = props.feedTag;\n  return /*#__PURE__*/_jsxDEV(FeedContainer, {\n    children: [/*#__PURE__*/_jsxDEV(FeedLeftContainer, {\n      children: [props.feedClosed && /*#__PURE__*/_jsxDEV(FeedFull, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uACE7 \\uB9C8\\uAC10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), props.feedTag && /*#__PURE__*/_jsxDEV(FeedTag, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.feedTag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FeedImg, {\n        src: props.placeImgSrc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FeedDescription, {\n      children: [/*#__PURE__*/_jsxDEV(FeedHeading, {\n        children: props.feedHeading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FeedDetailP, {\n        children: props.feedDetail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FeedTimeP, {\n        children: props.feedLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FeedTimeP, {\n        style: {\n          marginRight: \"3px\",\n          marginLeft: \"3px\"\n        },\n        children: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FeedTimeP, {\n        children: props.feedTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AvartarContainer, {\n        children: [props.feedParticipant.map((item, idx) => {\n          if (idx < 4) {\n            return /*#__PURE__*/_jsxDEV(Avartar, {\n              src: item,\n              marginRight: \"-5px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 22\n            }, this);\n          }\n        }), props.feedParticipant.length > 4 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"+\", props.feedParticipant.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = Feed;\nconst FeedContainer = styled.div`\n  width: 90%;\n  display: flex;\n  justify-content: center;\n  margin-top: 15px;\n`;\n_c2 = FeedContainer;\nconst FeedLeftContainer = styled.div`\n  width: 100px;\n  height: 100px;\n  padding: 0px;\n  position: relative;\n`;\n_c3 = FeedLeftContainer;\nconst FeedImg = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 10%;\n  object-fit: cover;\n`;\n_c4 = FeedImg;\nconst FeedDescription = styled.div`\n  width: 200px;\n  padding-left: 10px;\n  padding-top: 5px;\n`;\n_c5 = FeedDescription;\nconst FeedTag = styled.div`\n  position: absolute;\n  background-color: ${colors.MidBlue};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 5px;\n  height: 18px;\n  padding: 0px 5px 0px 5px;\n  top: -5px;\n  transform: translateX(-8px);\n\n  p {\n    color: white;\n    font-weight: 700;\n    font-size: 11px;\n  }\n`;\n_c6 = FeedTag;\nconst FeedFull = styled.div`\n  position: absolute;\n  background-color: gray;\n  width: 100%;\n  height: 100%;\n  opacity: 0.5;\n  border-radius: 15%;\n  justify-content: center;\n  display: flex;\n  align-items: center;\n  p {\n    color: white;\n    font-weight: 800;\n  }\n`;\n_c7 = FeedFull;\nconst AvartarContainer = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  p {\n    position: absolute;\n    left: 110px;\n    font-size: 14px;\n    font-weight: 500;\n    color: ${colors.LightGray};\n  }\n`;\n_c8 = AvartarContainer;\nconst FeedDetailP = styled.p`\n  margin-top: 3px;\n  font-size: 10px;\n`;\n_c9 = FeedDetailP;\nconst FeedTimeP = styled.span`\n  margin-top: 3px;\n  font-size: 10px;\n  color: ${colors.LightGray};\n`;\n_c10 = FeedTimeP;\nconst FeedHeading = styled.h4`\n  color: ${colors.StrongBlue};\n  font-size: 15px;\n  font-weight: 400;\n`;\n_c11 = FeedHeading;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"Feed\");\n$RefreshReg$(_c2, \"FeedContainer\");\n$RefreshReg$(_c3, \"FeedLeftContainer\");\n$RefreshReg$(_c4, \"FeedImg\");\n$RefreshReg$(_c5, \"FeedDescription\");\n$RefreshReg$(_c6, \"FeedTag\");\n$RefreshReg$(_c7, \"FeedFull\");\n$RefreshReg$(_c8, \"AvartarContainer\");\n$RefreshReg$(_c9, \"FeedDetailP\");\n$RefreshReg$(_c10, \"FeedTimeP\");\n$RefreshReg$(_c11, \"FeedHeading\");","map":{"version":3,"sources":["/Users/jeong-ideun/Desktop/xircle-client2/src/components/feed/Feed.tsx"],"names":["styled","colors","Avartar","Feed","props","feedClosed","feedTag","placeImgSrc","feedHeading","feedDetail","feedLocation","marginRight","marginLeft","feedTime","feedParticipant","map","item","idx","length","FeedContainer","div","FeedLeftContainer","FeedImg","img","FeedDescription","FeedTag","MidBlue","FeedFull","AvartarContainer","LightGray","FeedDetailP","p","FeedTimeP","span","FeedHeading","h4","StrongBlue"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport { colors } from \"../../Styles\";\nimport Avartar from \"../shared/Avartar\";\n\ninterface Props {\n  placeImgSrc: string;\n  feedClosed?: boolean;\n  feedTag?: string;\n  feedParticipant: string[];\n  feedLocation?: string;\n  feedHeading: string;\n  feedDetail?: string;\n  feedTime?: string;\n}\n\nexport default function Feed(props: Props) {\n  //const tag: string | null | undefined = props.feedTag;\n\n  return (\n    <FeedContainer>\n      <FeedLeftContainer>\n        {props.feedClosed && (\n          <FeedFull>\n            <p>곧 마감</p>\n          </FeedFull>\n        )}\n        {props.feedTag && (\n          <FeedTag>\n            <p>{props.feedTag}</p>\n          </FeedTag>\n        )}\n        <FeedImg src={props.placeImgSrc} />\n      </FeedLeftContainer>\n      <FeedDescription>\n        <FeedHeading>{props.feedHeading}</FeedHeading>\n        <FeedDetailP>{props.feedDetail}</FeedDetailP>\n\n        <FeedTimeP>{props.feedLocation}</FeedTimeP>\n        <FeedTimeP style={{ marginRight: \"3px\", marginLeft: \"3px\" }}>\n          /\n        </FeedTimeP>\n        <FeedTimeP>{props.feedTime}</FeedTimeP>\n        <AvartarContainer>\n          {props.feedParticipant.map((item, idx) => {\n            if (idx < 4) {\n              return <Avartar src={item} marginRight={\"-5px\"} />;\n            }\n          })}\n\n          {props.feedParticipant.length > 4 ? (\n            <p>+{props.feedParticipant.length}</p>\n          ) : null}\n        </AvartarContainer>\n      </FeedDescription>\n    </FeedContainer>\n  );\n}\n\nconst FeedContainer = styled.div`\n  width: 90%;\n  display: flex;\n  justify-content: center;\n  margin-top: 15px;\n`;\nconst FeedLeftContainer = styled.div`\n  width: 100px;\n  height: 100px;\n  padding: 0px;\n  position: relative;\n`;\nconst FeedImg = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 10%;\n  object-fit: cover;\n`;\n\nconst FeedDescription = styled.div`\n  width: 200px;\n  padding-left: 10px;\n  padding-top: 5px;\n`;\n\nconst FeedTag = styled.div`\n  position: absolute;\n  background-color: ${colors.MidBlue};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 5px;\n  height: 18px;\n  padding: 0px 5px 0px 5px;\n  top: -5px;\n  transform: translateX(-8px);\n\n  p {\n    color: white;\n    font-weight: 700;\n    font-size: 11px;\n  }\n`;\n\nconst FeedFull = styled.div`\n  position: absolute;\n  background-color: gray;\n  width: 100%;\n  height: 100%;\n  opacity: 0.5;\n  border-radius: 15%;\n  justify-content: center;\n  display: flex;\n  align-items: center;\n  p {\n    color: white;\n    font-weight: 800;\n  }\n`;\n\nconst AvartarContainer = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  p {\n    position: absolute;\n    left: 110px;\n    font-size: 14px;\n    font-weight: 500;\n    color: ${colors.LightGray};\n  }\n`;\nconst FeedDetailP = styled.p`\n  margin-top: 3px;\n  font-size: 10px;\n`;\n\nconst FeedTimeP = styled.span`\n  margin-top: 3px;\n  font-size: 10px;\n  color: ${colors.LightGray};\n`;\n\nconst FeedHeading = styled.h4`\n  color: ${colors.StrongBlue};\n  font-size: 15px;\n  font-weight: 400;\n`;\n"]},"metadata":{},"sourceType":"module"}